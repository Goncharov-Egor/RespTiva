[{"/Users/goncharov/Desktop/tivinos-master/tets/src/reportWebVitals.js":"1","/Users/goncharov/Desktop/tivinos-master/tets/src/components/Navbar.js":"2","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Registration.js":"3","/Users/goncharov/Desktop/tivinos-master/tets/src/index.js":"4","/Users/goncharov/Desktop/tivinos-master/tets/src/App.js":"5","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Home.js":"6","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/About.js":"7","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Login.js":"8","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/UsersList.js":"9","/Users/goncharov/Desktop/tivinos-master/tets/src/helpers/Path.js":"10","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/HouseholdBook.js":"11","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddHouseholdBook.js":"12","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBook.js":"13","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddBankBook.js":"14","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBookSpecification.js":"15","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddResident.js":"16","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLand.js":"17","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLandType.js":"18","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/LandTypesCreator.js":"19","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddAgriculture.js":"20","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/LoginError.js":"21","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/ErrorConstants.js":"22","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/InvalidTokenError.js":"23","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/AddHouseHoldBookError.js":"24","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/Prompter.js":"25","/Users/goncharov/Desktop/tivinos-master/tets/src/components/FarmAnimals.js":"26","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddFarmAnimals.js":"27","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AnimalTypesCreator.js":"28","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/SuccessOrNotInformation.js":"29","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddTransport.js":"30"},{"size":362,"mtime":1606555060000,"results":"31","hashOfConfig":"32"},{"size":3824,"mtime":1612764198539,"results":"33","hashOfConfig":"32"},{"size":4035,"mtime":1612776833681,"results":"34","hashOfConfig":"32"},{"size":501,"mtime":1606555060000,"results":"35","hashOfConfig":"32"},{"size":3876,"mtime":1613519245845,"results":"36","hashOfConfig":"32"},{"size":181,"mtime":1608160125859,"results":"37","hashOfConfig":"32"},{"size":376,"mtime":1606555060000,"results":"38","hashOfConfig":"32"},{"size":3152,"mtime":1613527786796,"results":"39","hashOfConfig":"32"},{"size":1485,"mtime":1607544345151,"results":"40","hashOfConfig":"32"},{"size":2240,"mtime":1613767759575,"results":"41","hashOfConfig":"32"},{"size":3946,"mtime":1613519245851,"results":"42","hashOfConfig":"32"},{"size":4530,"mtime":1608791807317,"results":"43","hashOfConfig":"32"},{"size":7383,"mtime":1613522959446,"results":"44","hashOfConfig":"32"},{"size":13219,"mtime":1608885630904,"results":"45","hashOfConfig":"32"},{"size":17967,"mtime":1613774898618,"results":"46","hashOfConfig":"32"},{"size":5386,"mtime":1608874826154,"results":"47","hashOfConfig":"32"},{"size":9131,"mtime":1613770239791,"results":"48","hashOfConfig":"32"},{"size":6317,"mtime":1608437827485,"results":"49","hashOfConfig":"32"},{"size":1870,"mtime":1608435970045,"results":"50","hashOfConfig":"32"},{"size":5351,"mtime":1607708310255,"results":"51","hashOfConfig":"32"},{"size":475,"mtime":1608156994701,"results":"52","hashOfConfig":"32"},{"size":59,"mtime":1608162452372,"results":"53","hashOfConfig":"32"},{"size":367,"mtime":1608159182387,"results":"54","hashOfConfig":"32"},{"size":483,"mtime":1608332140130,"results":"55","hashOfConfig":"32"},{"size":467,"mtime":1608333159335,"results":"56","hashOfConfig":"32"},{"size":1025,"mtime":1608703770704,"results":"57","hashOfConfig":"32"},{"size":7325,"mtime":1608886111540,"results":"58","hashOfConfig":"32"},{"size":6491,"mtime":1608877085201,"results":"59","hashOfConfig":"32"},{"size":691,"mtime":1608719162694,"results":"60","hashOfConfig":"32"},{"size":3333,"mtime":1612777040071,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1hz04cf",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/goncharov/Desktop/tivinos-master/tets/src/reportWebVitals.js",[],["145","146"],"/Users/goncharov/Desktop/tivinos-master/tets/src/components/Navbar.js",["147","148"],"import React, {useState, Fragment, Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n    state = {};\n\n    componentDidMount() {\n        console.log(localStorage.getItem('token'))\n        this.setState({\n            token: localStorage.getItem('token')\n        })\n    }\n\n    logoutButtonPressed = e => {\n        localStorage.clear()\n        this.setState({\n            token: null\n        })\n        //this.props.history.push({pathname:'/'})\n    }\n\n    render() {\n        if(this.state.token) {\n            return (\n                <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n                    <div className=\"navbar-brand\">\n                        Похозяйственный учет\n                    </div>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/\" exact>\n                                Главная\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/about\">\n                                Информация\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/users/registration\">\n                                Регистрация\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/HouseholdBooks\">\n                                Реестр похозяйственных книг\n                            </NavLink>\n                        </li>\n                        <form className=\"form-inline my-2 my-lg-0\" style={{position: \"absolute\", top: 10, right: 10,}}>\n                            <input className=\"form-control mr-sm-2\" type=\"search\"\n                                   aria-label=\"Search\"/>\n                                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Поиск</button>\n                        </form>\n                        <button className=\"btn btn-primary\" onClick={e => this.logoutButtonPressed(e)}>Выйти</button>\n                    </ul>\n                </nav>\n            )\n        }\n        return (\n            <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n                <div className=\"navbar-brand\">\n                    Похозяйственный учет\n                </div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\" exact>\n                            Главная\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/about\">\n                            Информация\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/login\">\n                            Авторизация\n                        </NavLink>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" style={{position: \"absolute\", top: 10, right: 10,}}>\n                    <input className=\"form-control mr-sm-2\" type=\"search\"  aria-label=\"Search\"/>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Поиск</button>\n                </form>\n            </nav>\n\n        )\n    }\n}",["149","150"],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Registration.js",[],["151","152"],"/Users/goncharov/Desktop/tivinos-master/tets/src/index.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/App.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Home.js",[],["153","154"],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/About.js",["155"],"import React, {Fragment} from 'react';\n\nexport const About = () =>  (\n\n    <div className=\"jumbotron\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">Добро пожаловать на сайт</h1>\n            <p className=\"lead\">Здесь будет появляться актуальная информация</p>\n        </div>\n    </div>\n)","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Login.js",["156","157"],"import React, {Fragment, useState, Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {LoginPath} from \"../helpers/Path\";\nimport {Redirect} from 'react-router-dom'\nimport LoginError from '../errors/LoginError'\n\n\nexport default class Login extends Component {\n\n    state = {}\n\n    registrationButtonPressed = async e => {\n\n        e.preventDefault()\n\n        const user = {\n            username: this.username,\n            password: this.password\n        }\n\n        console.log(user)\n        var config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data : user\n        };\n\n        const url = LoginPath\n        await axios.post(url, user, config)\n            .then(res => {\n                if(res.data.success) {\n                    localStorage.setItem('token', res.data.payload.token)\n                    this.setToken(res.data.payload.token)\n                    this.props.setToken(res.data.payload.token)\n                }\n                console.log(res)\n                this.setState({\n                    isIncorrectValues: !res.data.success\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        window.location.reload()\n    }\n\n    componentWillMount() {\n        this.setState({\n            isIncorrectValues: false\n        })\n    }\n\n\n    setToken = token => {\n        this.setState({\n            loggedIn: true,\n            token: token\n        })\n    }\n\n    render() {\n        console.log(\"Render called\")\n        if(this.state.loggedIn) {\n            return (<Redirect to={'/'}/>)\n        }\n        return (\n            <Fragment>\n                <h1>Вход</h1>\n                <Form>\n                    <Form.Group>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.username = e.target.value} name='username' placeholder='Имя пользователя' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.password = e.target.value} name='password' type='password' placeholder='Пароль' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <LoginError isInvalid={this.state.isIncorrectValues}/>\n                    </Form.Group>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.registrationButtonPressed(e)}>Войти</button>\n            </Fragment>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/UsersList.js",["158","159","160","161","162","163","164","165"],"import React, {Fragment, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {LoginPath, UsersListPath} from \"../helpers/Path\";\n\nexport const UsersList =  () => {\n    const url = UsersListPath\n    const user = {\n        fio: String,\n        login: String,\n        role: String\n    }\n    var config = {\n        method: 'get',\n        url: UsersListPath,\n\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization' : 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzIiwicm9sZSI6Ik9SRElOQVJZIiwiZXhwIjoxNjA3NTg2NjQxfQ.mHYdANSotQfPwlqBsm_b41UuNIyrnaSYk2L-Gj8DaihoZFWfiKEua8tRdl8uzJu1505aARX9jO1rgOWcprGbuQ'\n        },\n        data : user\n    };\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const emailHandler = (e) => {setEmail(e.target.value)}\n    const [users, setUsers] = useState([user])\n\n    var Users = [user]\n\n    var resp = axios.get(url, config).then((respnse) => {\n        Users = (JSON.parse(JSON.stringify(respnse)).data.payload.employees)\n        setUsers(Users)\n        //console.log(Users)\n    })\n    //Users = (JSON.parse(JSON.stringify(resp)).data.payload.employees)\n    //console.log(users[0].fio)\n    return (\n        <ul class=\"list-group\">\n            {\n               users.map((empl) => {\n                    return <li className=\"list-group-item\">{empl.fio} {empl.login}</li>\n                })\n\n            }\n\n        </ul>\n    )\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/helpers/Path.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/HouseholdBook.js",["166","167","168"],"import React, {Component} from \"react\";\nimport {withRouter} from 'react-router-dom'\nimport {GetHouseHoldBooksPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport {expiredTokenErrorConstant} from \"../errors/ErrorConstants\";\nimport InvalidTokenError from \"../errors/InvalidTokenError\";\n\nexport default class HouseholdBook extends Component {\n\n    state = {}\n\n    componentDidMount() {\n\n        console.log(\"asdfghjkvcxzxcvbnm,hgfd\")\n\n        let config = {\n            method: 'get',\n            url: GetHouseHoldBooksPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        let url = GetHouseHoldBooksPath\n\n        axios.get(url, config).then((respnse) => {\n            if(respnse.data.message === expiredTokenErrorConstant){\n                this.setState({\n                    isExpiredToken: true\n                })\n            } else {\n                let HouseholdBooks = (JSON.parse(JSON.stringify(respnse)).data.payload.householdBooks)\n                this.setState({\n                    HouseholdBooks: HouseholdBooks,\n                    isLoaded: true\n                })\n            }\n            console.log(respnse)\n        })\n\n    }\n\n    addButtonClicked = e => {\n        window.open(\"/AddHouseholdBook\")\n    }\n\n    openButtonClicked = (e, ind) => {\n        let a = JSON.stringify(this.state.HouseholdBooks[ind])\n        console.log(a)\n        //console.log(this.state.HouseholdBooks[ind])\n        //localStorage.setItem('HouseholdBook', this.state.HouseholdBooks[ind])\n\n        this.props.history.push({pathname: '/BankBook/' + this.state.HouseholdBooks[ind].name + '/' + this.state.HouseholdBooks[ind].kozhuunName + '/' + this.state.HouseholdBooks[ind].villageName,\n            state: JSON.stringify(this.state.HouseholdBooks[ind])})\n        //window.open('/BankBook')\n    }\n\n    render() {\n        if (this.state.isExpiredToken) {\n            return <InvalidTokenError isInvalid={true}/>\n        }\n        if(this.state.isLoaded) {\n            return (\n                <ul className=\"list-group\">\n                    <h1>Реестр похозяйственных книг</h1>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonClicked(e)}>Добавить книгу</button>\n                    {\n                        this.state.HouseholdBooks.map((empl, index) => {\n                            return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                      aria-current=\"true\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{index + 1} Книга: {empl.name}</h5>\n                                    <small><button onClick={e => this.openButtonClicked(e, index)} type=\"submit\" className=\"btn btn-outline-success\" >Открыть</button></small>\n                                </div>\n                                <p className=\"mb-1\">Название кожууна: {empl.kozhuunName}</p>\n                                <p className=\"mb-1\">Название сумона: {empl.villageName}</p>\n                                <small>Имя создателя: {empl.creatorName}</small>\n                            </a>)\n                          return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                        })\n\n                    }\n                </ul>\n            )\n        }\n        return (<ul className=\"list-group\">\n            {\n                <h1>Загрузка</h1>\n                //this.state.HouseholdBooks.map((empl, index) => {\n                //  return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                //})\n\n            }\n        </ul>)\n    }\n}\n","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddHouseholdBook.js",["169","170","171","172"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport {Dropdown, Form} from \"react-bootstrap\";\nimport {AddHouseHoldBookPath, GetKozhuunsPath, LoginPath} from \"../helpers/Path\";\nimport Select from 'react-select'\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\n\nvar options = []\n\nexport default class AddHouseholdBook extends Component {\n\n    state = {}\n    async componentDidMount()  {\n        this.setState({\n            isApply: false\n        })\n\n        let config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = GetKozhuunsPath\n\n        await axios.get(url, config).then(res => {\n            console.log(res)\n            var opt = []\n            res.data.payload.kozhuuns.map((kozhuun) => {\n                console.log(kozhuun)\n                opt.push({\n                    value: kozhuun.name,\n                    label: kozhuun.name\n                })\n            })\n            this.setState({\n                options: opt\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }\n\n    addButtonPressed = async (e) => {\n\n        const HouseholdBook = {\n            kozhuunName: this.state.kozhuunName,\n            name: this.name,\n            villageName: this.villageName\n        }\n\n        console.log(HouseholdBook)\n        let config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddHouseHoldBookPath\n\n        await axios.post(url, HouseholdBook, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isInvalid: !res.data.success,\n                    message: res.data.message\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        this.setState({\n            isApply: true\n        })\n        if(!this.state.isInvalid) {\n            this.props.history.push({pathname : '/HouseholdBooks'})\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            isInvalid: false,\n            message: \"\"\n        })\n    }\n\n    selectCozuunName = (e) => {\n        this.setState({\n            kozhuunName: e.value\n        })\n        console.log(e.value)\n    }\n\n    render() {\n        //if(this.state.isApply) {\n          //  return (<Redirect to={'/HouseholdBooks'}/>)\n        //}\n        return(<Fragment>\n            <h1>Добавление похозяйственной книги</h1>\n            <Form>\n                <Form.Group>\n                    <div>\n                        <div className=\"mb-3\">\n                            <Select\n                                placeholder='Кожуун'\n                                onChange={e=>this.selectCozuunName(e)}\n                                options={this.state.options}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.name = e.target.value} name='name' placeholder='Номер книги' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.villageName = e.target.value} name='villageName' placeholder='Название сумона' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <AddHouseHoldBookError message={this.state.message} isInvalid={this.state.isInvalid}/>\n\n                </Form.Group>\n            </Form>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить книгу</button>\n        </Fragment>)\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBook.js",["173","174","175"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport HouseholdBook from \"./HouseholdBook\";\nimport {CancelResizdentPath, CloseBankBook, GetBankBooksPath, GetHouseHoldBooksPath} from \"../helpers/Path\";\nimport {Form, Modal} from \"react-bootstrap\";\nimport moment from \"moment\";\n\nexport default class BankBook extends Component {\n\n    componentDidMount() {\n        let config = {\n            method: 'get',\n            url: GetHouseHoldBooksPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        console.log(this.props.match.params.householdBookName)\n        console.log(this.props.match.params.kozhuunName)\n\n        const HHBook = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName\n        }\n\n        let url = GetBankBooksPath\n        axios.post(url, HHBook, config).then((respnse) => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                bankBooks: respnse.data.payload.bankBooks,\n                didLoad: true\n            })\n        })\n    }\n    componentWillMount() {\n        this.setState({\n            HouseholdBook: {\n                householdBookName: this.props.match.params.householdBookName,\n                kozhuunName: this.props.match.params.kozhuunName\n            },\n            mod:false,\n            ind: -1,\n            willDeleteName: \"\"\n        })\n    }\n\n    addButtonClicked = (e) => {\n        console.log({pathname : '/AddBankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName})\n        this.props.history.push({pathname : '/AddBankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName})\n    }\n\n    openButtonClicked = (e, ind) => {\n        this.props.history.push({pathname: '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.state.bankBooks[ind].name})\n    }\n\n    openModal = (e,  index) => {\n        this.setState({\n            mod: true,\n            ind: index,\n            willDeleteName: this.state.bankBooks[index].mainFio\n        })\n    }\n\n    closeModal = (e) => {\n        this.setState({\n            mod:false,\n            ind: -1\n        })\n    }\n\n    onCancelButtonPressed = async (e) => {\n\n        let config = {\n            method: 'get',\n            url: CancelResizdentPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let date = \"\"\n\n        if(this.cancelDate) {\n            let getСreationDate = new Date(this.cancelDate)\n            date = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n\n\n        const req = {\n            bankBookName: this.state.bankBooks[this.state.ind].name,\n            closeDate: date,\n            closeReason: this.cancelReason,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName\n        }\n\n        console.log(req)\n\n        await axios.post(CloseBankBook, req, config).then(resp => {\n            console.log(resp)\n        })\n\n        window.location.reload()\n    }\n\n    render() {\n        if(!this.state.didLoad) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        return(\n            <Fragment>\n                <Form>\n                    <h1>{this.props.match.params.kozhuunName}</h1>\n                </Form>\n\n                <Modal show={this.state.mod} onHide={e => this.closeModal(e)}>\n                    <Modal.Header closeButton>\n                        <h4>{this.state.willDeleteName}</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Причина закрытия\" onChange={e => this.cancelReason = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        <input type=\"date\" onChange={e => this.cancelDate = e.target.value} name='issueDate' placeholder='Дата выбытия' className=\"form-control\" aria-describedby=\"basic-addon1\" style={{marginTop: 20}}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-danger\" onClick={e => this.onCancelButtonPressed(e)}>Закрыть ЛС</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Form>\n                <ul className=\"list-group\">\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonClicked(e)} style={{marginTop:20}}>Добавить Лицевой счет</button>\n                {\n                    this.state.bankBooks.map((book, index) => {\n\n                        if(book.closingDate || book.closingReason) {\n                            return (\n                                <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                       aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\" style={{ textDecorationLine: 'line-through' }}>{index + 1}. {book.mainFio}</h5>\n                                    </div>\n                                    <p className=\"mb-1\">Сумон: {this.props.match.params.villageName}</p>\n\n                                    <small>Дата создания: {book.creationDate}</small>\n                                    <p className=\"mb-1\">Причина закрытия: {book.closingReason}</p>\n                                    <p className=\"mb-1\">Дата закрытия: {book.closingDate}</p>\n                                </a>\n\n                            )\n                        }\n                        return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                  aria-current=\"true\">\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1\">{index + 1}. {book.mainFio}</h5>\n                                <small><button onClick={e => this.openButtonClicked(e, index)} type=\"submit\" className=\"btn btn-outline-success\" style={{position: \"absolute\", top: 10, right: 150,}}>Открыть</button></small>\n                                <small><button  type=\"button\" className=\"btn btn-outline-danger\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModal(e, index)}>Закрыть ЛС</button></small>\n                            </div>\n                            <p className=\"mb-1\">Сумон: {this.props.match.params.villageName}</p>\n                            <small>Дата создания: {book.creationDate}</small>\n                        </a>)\n                       // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                    })\n\n                }\n                </ul>\n                </Form>\n            </Fragment>\n\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddBankBook.js",["176","177"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport {Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router-dom\";\nimport {AddBankBooksPath, AddResidentPath, LoginPath} from \"../helpers/Path\";\nimport Select from \"react-select\";\nimport moment from 'moment'\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\nimport Prompter from \"../errors/Prompter\";\n\n\nconst options = [{ value: \"Мужчина\", label: \"Мужчина\" }, { value: \"Женщина\", label: \"Женщина\" }]\n\nfunction isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport default class AddBankBook extends Component {\n\n    state = {}\n\n    addButtonPressed = async (e) => {\n\n\n\n        if(this.creationDate !== \"\") {\n            var getСreationDate = new Date(this.creationDate)\n            var creationDate = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n        const BankBook = {\n            additionalInfo: (this.additionalInfo === \"\" ? null : this.additionalInfo),\n            address: (this.address === \"\" ? null : this.address),\n            creationDate: (this.creationDate === \"\" ? null : creationDate),\n            householdBookName: this.props.match.params.householdBookName,\n            inn: (this.inn === \"\" ? null : this.inn),\n            kozhuunName: this.props.match.params.kozhuunName,\n            name: (this.name === \"\"? null : this.name)\n        }\n\n        console.log(BankBook.name)\n\n        let isVal = ((isNumeric(this.inn) && (this.inn.length === 12)) || this.inn === null || this.inn === \"\" || this.inn.length === 0)\n\n        this.setState({\n            isInnValid: isVal\n        })\n        let isPI = ((isNumeric(this.passportId) && (this.passportId.length === 4)) || this.passportId === null || this.passportId === \"\" || this.passportId.length === 0)\n        let isPS = ((isNumeric(this.passportSeries) && (this.passportSeries.length === 6)) || this.passportSeries === null || this.passportSeries === \"\" || this.passportSeries.length === 0)\n\n        this.setState({\n            isPassportIdValid: ((isNumeric(this.passportId) && (this.passportId.length === 4)) || this.passportId === null || this.passportId === \"\" || this.passportId.length === 0),\n            isPassportSeriesValid: ((isNumeric(this.passportSeries) && (this.passportSeries.length === 6)) || this.passportSeries === null || this.passportSeries === \"\" || this.passportSeries.length === 0)\n\n        })\n        console.log(\"aaaaaaaaa\", isNumeric(this.inn), (this.inn.length === 12), isVal)\n        if(!(isVal && isPI && isPS && this.name !== \"\" && this.name !== null))\n            return\n\n\n\n        console.log(BankBook)\n\n        let config = {\n            method: 'post',\n            url: AddBankBooksPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddBankBooksPath\n        await axios.post(url, BankBook, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isValid: (this.state.isValid && res.data.success)\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        url = AddResidentPath\n\n        if(this.birthDate !== \"\") {\n            var getBDate = new Date(this.birthDate)\n            var Bdate = moment(getBDate).format('DD.MM.YYYY')\n        }\n        if(this.issueDate != \"\") {\n            var getIsDate = new Date(this.issueDate)\n            var IsDate = moment(getIsDate).format('DD.MM.YYYY')\n        }\n\n        const resident = {\n            bankBookName: this.name,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            residents: [{\n                birthDate: (this.birthDate === \"\" ? null : Bdate),\n                gender: (this.state.gender === \"\" ? null : this.state.gender),\n                name: (this.name1 === \"\" ? null : this.name1),\n                passport: {\n                    issueDate: (this.issueDate === \"\" ? null : IsDate),\n                    issuingAuthority: (this.issuingAuthority === \"\" ? null : this.issuingAuthority),\n                    passportId: (this.passportId === \"\" ? null : this.passportId),\n                    passportSeries: (this.passportSeries === \"\" ? null : this.passportSeries)\n                },\n                relation: null,\n                residenceMark: null\n            }]\n        }\n\n        console.log(isNumeric(this.passportId), (this.passportId.length === 4))\n\n        if(this.state.isPassportIdValid && this.state.isPassportSeriesValid) {\n            await axios.post(url, resident, config)\n                .then(res => {\n                    console.log(res)\n                    this.setState({\n                        isValid: (res.data.success && this.state.isPassportSeriesValid && this.state.isPassportIdValid),\n                        isApply: (res.data.success && this.state.isPassportSeriesValid && this.state.isPassportIdValid)\n                    })\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n            if (this.state.isValid) {\n                this.setState({\n                    isApply: true\n                })\n            }\n        }\n    }\n\n    selectGender = (e) => {\n        this.setState({\n            gender: e.value\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            isValid: true,\n            isPassportIdValid: true,\n            isPassportSeriesValid: true,\n            isInnValid: true,\n            isAllFieldsFilled: true\n        })\n        this.creationDate = \"\"\n        this.additionalInfo = \"\"\n        this.address = \"\"\n        this.inn = \"\"\n        this.name = \"\"\n        this.birthDate = \"\"\n        this.name1 = \"\"\n        this.setState({\n            gender:\"\"\n        })\n        this.issueDate = \"\"\n        this.issuingAuthority = \"\"\n        this.passportId = \"\"\n        this.passportSeries = \"\"\n    }\n\n    render() {\n        if(this.state.isApply) {\n            let path = '/BankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName\n            return(<Redirect to={path}/>)\n        }\n        return(\n            <Fragment>\n            <Form>\n                <Form.Group>\n                    <h2>Общие данные</h2>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Обязательно</span>\n                        </div>\n                        <input onChange={e => this.name = e.target.value} name='name' placeholder='Номер лицевого счета' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата создания</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.creationDate = e.target.value} name='issueDate' placeholder='Дата выдачи паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.address = e.target.value} name='name' placeholder='Адрес хозяйства (название населенного пункта, название улицы, номер дома, квартиры)' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <Prompter isInvalid={!this.state.isInnValid} message=\"Неверно набран ИНН. Должно быть 12 цифор\"/>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.inn = e.target.value} name='inn' placeholder='ИНН' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.additionalInfo = e.target.value} name='additionalInfo' placeholder='Дополнительная информация' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <h2>Данные главного по хозяйству</h2>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата рождения</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.birthDate = e.target.value} name='birthDate' placeholder='Дата рождения' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Select placeholder=\"Пол (Обязательное поле)\"\n                            onChange={e=>this.selectGender(e)}\n                            options={options}\n\n                        />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Обязательно</span>\n                        </div>\n                        <input onChange={e => this.name1 = e.target.value} name='name1' placeholder='ФИО' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата выдачи паспорта</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.issueDate = e.target.value} name='issueDate' placeholder='Дата выдачи паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.issuingAuthority = e.target.value} name='issuingAuthority' placeholder='Кем выдан паспорт' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <Prompter isInvalid={!this.state.isPassportIdValid} message=\"Неверно набран номер паспорта. Должно быть 4 цифры\"/>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n\n                        <input onChange={e => this.passportId = e.target.value} name='passportId' placeholder='Серия паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <Prompter isInvalid={!this.state.isPassportSeriesValid} message=\"Неверно набрана серия паспорта. Должно быть 6 цифор\"/>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.passportSeries = e.target.value} name='passportSeries' placeholder='Номер паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n\n                </Form.Group>\n            </Form>\n            <AddHouseHoldBookError isInvalid={!this.state.isValid} message={\"Неверные данные\"}/>\n            <Prompter isInvalid={!this.state.isAllFieldsFilled} message=\"Все поля должны быть заполнены\"/>\n\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить лицевой счет</button>\n        </Fragment>)\n    }\n}\n","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBookSpecification.js",["178","179","180","181","182","183","184","185","186","187","188","189"],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddResident.js",[],["190","191"],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLand.js",["192","193","194"],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLandType.js",["195","196","197","198","199","200","201"],"import React, {Component, Fragment} from \"react\";\nimport {AddLandPath, AddLandTypePath, GetLandPath, GetLandsPath, GetLendTypesPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {Redirect} from \"react-router-dom\";\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\n\nexport default class AddLandType extends Component {\n\n    addButtonPressed = async (e) => {\n        let config = {\n            method: 'post',\n            url: AddLandTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        let url = AddLandTypePath\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            land: this.props.match.params.cadastralNumber,\n            landTypes: [{\n                landType: this.state.landType,\n                value: this.value\n            }]\n        }\n\n        console.log(req)\n\n        await axios.post(url, req, config)\n            .then(res => {\n                console.log(res)\n\n                this.setState({\n                    isSuccess: res.data.success\n                })\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        this.setState({\n            isFirst: false\n        })\n    }\n\n\n    componentDidMount = async () => {\n        let config = {\n            method: 'post',\n            url: GetLendTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = GetLendTypesPath\n        await axios.get(url, config)\n            .then(res => {\n                console.log(res)\n                var opt = []\n                res.data.payload.landTypes.map((lt) => {\n                    opt.push({value: lt.name, label: lt.name})\n                })\n                console.log(opt)\n                this.setState({\n                    landTypes: res.data.payload.landTypes,\n                    options: opt\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        url = GetLandPath\n        const req = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName,\n            cadastralNumber: this.props.match.params.cadastralNumber\n        }\n\n        console.log(url)\n\n        await axios.post(url, req, config).then(respnse => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                landTypes1: respnse.data.payload.landTypes\n            })\n            console.log(respnse)\n        })\n        \n        this.setState({\n            isApply: true\n        })\n    }\n\n    componentWillMount() {\n        this.setState({\n            isApply: false,\n            options: [],\n            isSuccess: true,\n            isFirst: true\n        })\n    }\n\n    selectorChanged = (e) => {\n        console.log(e.value)\n        this.setState({\n            landType: e.value\n        })\n    }\n\n    landCreatorButtonPressed = (e) => {\n        this.props.history.push({pathname : '/LandTypesCreator'})\n    }\n\n    render() {\n        console.log(\"Salam\")\n        if(!this.state.isApply) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        if(this.state.isSuccess && !this.state.isFirst) {\n            let path = '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName\n            return(<Redirect to={path}/>)\n        }\n        console.log(this.state.landTypes1)\n        return (\n                <a>\n                    <div>\n                        <div className=\"mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.landCreatorButtonPressed(e)}>+</button>\n\n                            <Select\n                                placeholder='Вид'\n                                onChange={e=>this.selectorChanged(e)}\n                                options={this.state.options}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.value = e.target.value} placeholder='Площадь' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <AddHouseHoldBookError message=\"Неверные данные\" isInvalid={!this.state.isSuccess}/>\n                        <div className=\"input-group mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n                        </div>\n                    </div>\n                    <div>\n                    {\n                        this.state.landTypes1.map((landType, index) => {\n                            return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                      aria-current=\"true\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{landType.landType}</h5>\n                                </div>\n                                <p className=\"mb-1\">Создатель: {landType.creatorName}</p>\n                                <small>Площадь: {landType.area}</small>\n                            </a>)\n                        })\n\n                    }\n                    </div>\n\n                </a>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/LandTypesCreator.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddAgriculture.js",["202","203"],"import React, {Component} from \"react\";\nimport {AddAgriculturePath, AddLandTypePath, GetAgriculturePath, GetLandPath, GetLendTypesPath} from \"../helpers/Path\";\nimport axios from \"axios\";\n\nexport default class AddAgriculture extends Component {\n\n    componentDidMount = async () => {\n        let config = {\n            method: 'post',\n            url: GetLendTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        };\n\n        let url = GetAgriculturePath\n        await axios.get(url, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    agriculturesTypes: res.data.payload.agricultures\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        url = GetLandPath\n        const req = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName,\n            cadastralNumber: this.props.match.params.cadastralNumber\n        }\n\n        console.log(url)\n\n        await axios.post(url, req, config).then(respnse => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                agricultures: respnse.data.payload.agricultures\n            })\n            console.log(respnse)\n        })\n\n        this.setState({\n            isApply: true\n        })\n    }\n\n    selectorChanged = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            agriculturesTypeSelector: e.target.value\n        })\n    }\n\n    componentWillMount() {\n        this.setState({\n            isApply: false\n        })\n    }\n\n    agriculturesCreatorButtonPressed = () => {\n\n    }\n\n    addButtonPressed = async () => {\n        let config = {\n            method: 'post',\n            url: AddLandTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        let url = AddAgriculturePath\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            land: this.props.match.params.cadastralNumber,\n            agricultures: [{\n                agriculture: this.state.agriculturesTypeSelector,\n                value: this.value\n            }]\n        }\n\n        console.log(req)\n\n        console.log(url)\n        await axios.post(url, req, config)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        console.log(\"Salam\")\n        if(!this.state.isApply) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        return (\n            <a>\n                <div>\n                    <select onChange={e => this.selectorChanged(e)} class=\"form-select\" aria-label=\"Default select example\" defaultValue=\"Выберите\">\n                        <option selected>Выберите</option>\n                        {\n                            this.state.agriculturesTypes.map((agriculturesType, index) => {\n                                return(\n                                    <option value={agriculturesType.name}>{index + 1}. {agriculturesType.name}</option>)\n                            })\n                        }\n                    </select>\n                    <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.agriculturesCreatorButtonPressed(e)}>+</button>\n                </div>\n                <div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.value = e.target.value} placeholder='Площадь' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n                </div>\n                <div>\n                    {\n                        this.state.agricultures.map((agriculture, index) => {\n                            return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                      aria-current=\"true\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{agriculture.agriculture}</h5>\n                                </div>\n                                <p className=\"mb-1\">Создатель: {agriculture.creatorName}</p>\n                                <small>Площадь: {agriculture.area}</small>\n                            </a>)\n                        })\n\n                    }\n                </div>\n            </a>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/LoginError.js",["204","205"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class LoginError extends  Component {\n\n    render() {\n        if(this.props.isInvalid) {\n            return(\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    Неверный логин или пароль\n                </div>\n            )\n        }\n        return(<div></div>)\n    }\n}\n\nLoginError.defaultProps = {isInvalid: false}","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/ErrorConstants.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/InvalidTokenError.js",[],["206","207"],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/AddHouseHoldBookError.js",["208","209"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class AddHouseHoldBookError extends  Component {\n\n    render() {\n        if(this.props.isInvalid) {\n            return(\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.props.message}\n                </div>\n            )\n        }\n        return(<div></div>)\n    }\n}\n\nAddHouseHoldBookError.defaultProps = {isInvalid: false, message: \"\"}",["210","211"],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/Prompter.js",["212"],"import React, {Component} from \"react\";\nimport AddHouseHoldBookError from \"./AddHouseHoldBookError\";\n\nexport default class Prompter extends Component {\n\n\n    render() {\n        if(this.props.isInvalid) {\n            return(\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    {this.props.message}\n                </div>\n            )\n        }\n        return(<div></div>)\n    }\n}\n\nPrompter.defaultProps = {isInvalid: false, message: \"\"}","/Users/goncharov/Desktop/tivinos-master/tets/src/components/FarmAnimals.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddFarmAnimals.js",["213","214","215"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {AddFarmAnimalsPath, GetFarmAnimalsTypesPath, LoginPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\nfunction isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport default class AddFarmAnimals extends Component {\n\n    state = {\n        animalTypes: {},\n        options: [],\n        isSecondField: false,\n        secondField: [],\n        options2: [],\n        name: \"\",\n        parentName: \"\",\n        isFirst: true,\n        isInvalid: false\n    }\n\n    componentDidMount = async () => {\n        let url = GetFarmAnimalsTypesPath\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        await axios.get(url, config).then( res => {\n            console.log(res)\n            res.data.payload.farmAnimals.map((animal) => {\n\n                //console.log(animal.parentName, animal.name)\n                if(animal.parentName !== \"\") {\n                    this.state.animalTypes[animal.parentName] = []\n                }\n            })\n            res.data.payload.farmAnimals.map((animal) => {\n                if(animal.parentName !== null) {\n                    this.state.animalTypes[animal.parentName].push(animal.name)\n                } else {\n                    this.state.animalTypes[animal.name] = []\n                }\n            })\n        })\n\n        var opt = []\n\n        for( var obj in this.state.animalTypes) {\n            opt.push({value: obj, label: obj})\n        }\n        this.setState({\n            options: opt\n        })\n       // console.log(this.state.animalTypes)\n    }\n\n    addNewFarmAnimalsType = (e) => {\n        this.props.history.push({pathname : '/AnimalTypesCreator/'} )\n\n    }\n\n    selectorChanged = (e) => {\n        this.setState({\n            isSecondField: this.state.animalTypes[e.value].length !== 0,\n            name: e.value\n        })\n        if(this.state.animalTypes[e.value].length !== 0) {\n            var opt2 = []\n            for(var i in this.state.animalTypes[e.value]) {\n                opt2.push({label: this.state.animalTypes[e.value][i], value : this.state.animalTypes[e.value][i]})\n            }\n            this.setState({\n                options2: opt2,\n            })\n        }\n    }\n\n    addButtonPressed = async (e) => {\n\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddFarmAnimalsPath\n\n        if(!isNumeric(this.value)) {\n            console.log(\"!!!!!   Количество должно быть int\")\n            this.setState({\n                isInvalid: true\n            })\n            return;\n        }\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            animals: [{\n                name: this.state.name,\n                value: this.value\n            }]\n        }\n        console.log(req)\n\n        await axios.post(url, req, config).then((res) => {\n            console.log(res)\n            this.setState({\n                isInvalid: !res.data.success\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n        this.setState({\n            isFirst: false\n        })\n    }\n\n    render() {\n        if(this.state.isSecondField) {\n            return (\n                <Fragment>\n                    <h1>Добавление сельскохозяйственных животных, птиц и пчел</h1>\n                    <Form>\n                        <div>\n                            <div className=\"mb-3\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.addNewFarmAnimalsType(e)}>+</button>\n\n                                <Select\n                                    placeholder='Вид'\n                                    options={this.state.options}\n                                    onChange={e => this.selectorChanged(e)}\n                                />\n                            </div>\n                            <div className=\"mb-3\">\n                                <Select\n                                    placeholder='Подвид'\n                                    options={this.state.options2}\n                                    onChange={e => this.setState({name: e.value})}\n                                />\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"/>\n                                </div>\n                                <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                            </div>\n                            <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={this.state.isInvalid}/>\n                        </div>\n                    </Form>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n                </Fragment>\n            )\n        }\n        return (\n            <Fragment>\n                <h1>Добавление сельскохозяйственных животных, птиц и пчел</h1>\n                <Form>\n                    <div>\n                        <div className=\"mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.addNewFarmAnimalsType(e)}>+</button>\n\n                            <Select\n                                placeholder='Вид'\n                                options={this.state.options}\n                                onChange={e => this.selectorChanged(e)}\n                            />\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={this.state.isInvalid}/>\n                    </div>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n            </Fragment>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AnimalTypesCreator.js",["216","217","218"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {AddLandPath, CreateAnimalTypePath, GetFarmAnimalsTypesPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\nexport default class AnimalTypesCreator extends Component {\n\n    state = {\n        isCheckbox: false,\n        options: [],\n        animalTypes: {},\n        isFirst: true,\n        isValid: true\n    }\n\n    checkboxChanged = e => {\n        this.setState({\n            isCheckbox: e.target.checked\n        })\n    }\n\n    addButtonPressed =  (e) => {\n        let url = CreateAnimalTypePath\n\n        let config = {\n            method: 'post',\n            url: CreateAnimalTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        var req\n\n        if(this.name2 === \"\") {\n            req = {\n                name: this.name\n            }\n        } else {\n            req = {\n                name: this.name2,\n                parentName: this.name\n            }\n        }\n\n        console.log(req)\n\n        axios.post(url, req, config)\n            .then( res =>{\n                this.setState({\n                    isValid: res.data.success,\n                    isFirst: false\n                })\n                console.log(res)\n            }).catch( err => {\n            console.log(err)\n        })\n    }\n\n    componentDidMount = async () => {\n\n        this.name2 = \"\"\n\n        let url = GetFarmAnimalsTypesPath\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        await axios.get(url, config).then( res => {\n            console.log(res)\n            res.data.payload.farmAnimals.map((animal) => {\n\n                //console.log(animal.parentName, animal.name)\n                if(animal.parentName !== \"\") {\n                    this.state.animalTypes[animal.parentName] = []\n                }\n            })\n            res.data.payload.farmAnimals.map((animal) => {\n                if(animal.parentName !== null) {\n                    this.state.animalTypes[animal.parentName].push(animal.name)\n                } else {\n                    this.state.animalTypes[animal.name] = []\n                }\n            })\n        })\n\n        var opt = []\n\n        for( var obj in this.state.animalTypes) {\n            opt.push({value: obj, label: obj})\n        }\n        this.setState({\n            options: opt\n        })\n        // console.log(this.state.animalTypes)\n    }\n\n    selectorChanged = (e) => {\n        this.name = e.value\n    }\n\n    render() {\n        const {isCheckbox} = this.state;\n        console.log(isCheckbox)\n        if(!isCheckbox) {\n            return (\n                <Fragment>\n                    <h1>Добавление типов сельскохозяйственных животных, птиц и пчел</h1>\n                    <Form>\n                        <div>\n                            <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isValid}/>\n\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Является ли подвидом .\n                                    <input type=\"checkbox\" checked={isCheckbox}\n                                           onChange={e => this.checkboxChanged(e)}/></span>\n                                </div>\n                                <input onChange={e => this.name = e.target.value} name='name' placeholder='Вид'\n                                       className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                            </div>\n                        </div>\n                    </Form>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить\n                    </button>\n                </Fragment>\n            )\n        }\n        return (\n            <Fragment>\n                <h1>Добавление типов сельскохозяйственных животных, птиц и пчел</h1>\n                <Form>\n                    <div>\n                        <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isValid}/>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Является ли подвидом .\n                                    <input type=\"checkbox\" checked={isCheckbox}\n                                           onChange={e => this.checkboxChanged(e)}/></span>\n                            </div>\n                            <input onChange={e => this.name2 = e.target.value} name='name' placeholder='Подвид'\n                                   className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"mb-3\">\n                            <Select\n                                placeholder='Вид'\n                                options={this.state.options}\n                                onChange={e => this.selectorChanged(e)}\n                            />\n                        </div>\n\n                        {/*<div className=\"input-group mb-3\">*/}\n                        {/*    <div className=\"input-group-prepend\">*/}\n                        {/*        <span className=\"input-group-text\" id=\"basic-addon1\"></span>*/}\n                        {/*    </div>*/}\n                        {/*    <input onChange={e => this.name = e.target.value} name='name' placeholder='Вид'*/}\n                        {/*           className=\"form-control\" aria-describedby=\"basic-addon1\"/>*/}\n                        {/*</div>*/}\n                    </div>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить\n                </button>\n            </Fragment>\n        )\n    }\n\n}",["219","220"],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/SuccessOrNotInformation.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddTransport.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"229","line":1,"column":26,"nodeType":"227","messageId":"228","endLine":1,"endColumn":34},{"ruleId":"221","replacedBy":"230"},{"ruleId":"223","replacedBy":"231"},{"ruleId":"221","replacedBy":"232"},{"ruleId":"223","replacedBy":"233"},{"ruleId":"221","replacedBy":"234"},{"ruleId":"223","replacedBy":"235"},{"ruleId":"225","severity":1,"message":"229","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":1,"column":26,"nodeType":"227","messageId":"228","endLine":1,"endColumn":34},{"ruleId":"225","severity":1,"message":"236","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":17},{"ruleId":"225","severity":1,"message":"229","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"237","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"238","line":4,"column":9,"nodeType":"227","messageId":"228","endLine":4,"endColumn":18},{"ruleId":"225","severity":1,"message":"239","line":23,"column":12,"nodeType":"227","messageId":"228","endLine":23,"endColumn":17},{"ruleId":"225","severity":1,"message":"240","line":24,"column":12,"nodeType":"227","messageId":"228","endLine":24,"endColumn":20},{"ruleId":"225","severity":1,"message":"241","line":24,"column":22,"nodeType":"227","messageId":"228","endLine":24,"endColumn":33},{"ruleId":"225","severity":1,"message":"242","line":26,"column":11,"nodeType":"227","messageId":"228","endLine":26,"endColumn":23},{"ruleId":"225","severity":1,"message":"243","line":31,"column":9,"nodeType":"227","messageId":"228","endLine":31,"endColumn":13},{"ruleId":"225","severity":1,"message":"244","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":70,"column":36,"nodeType":"247","endLine":71,"endColumn":59},{"ruleId":"248","severity":1,"message":"249","line":80,"column":27,"nodeType":"250","messageId":"251","endLine":80,"endColumn":129},{"ruleId":"225","severity":1,"message":"252","line":3,"column":9,"nodeType":"227","messageId":"228","endLine":3,"endColumn":17},{"ruleId":"225","severity":1,"message":"236","line":4,"column":9,"nodeType":"227","messageId":"228","endLine":4,"endColumn":17},{"ruleId":"225","severity":1,"message":"253","line":9,"column":5,"nodeType":"227","messageId":"228","endLine":9,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":34,"column":53,"nodeType":"256","messageId":"257","endLine":34,"endColumn":55},{"ruleId":"225","severity":1,"message":"258","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":21},{"ruleId":"245","severity":1,"message":"246","line":147,"column":33,"nodeType":"247","endLine":148,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":161,"column":32,"nodeType":"247","endLine":162,"endColumn":55},{"ruleId":"225","severity":1,"message":"238","line":5,"column":44,"nodeType":"227","messageId":"228","endLine":5,"endColumn":53},{"ruleId":"259","severity":1,"message":"260","line":91,"column":27,"nodeType":"261","messageId":"262","endLine":91,"endColumn":29},{"ruleId":"225","severity":1,"message":"263","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":15},{"ruleId":"225","severity":1,"message":"264","line":7,"column":5,"nodeType":"227","messageId":"228","endLine":7,"endColumn":26},{"ruleId":"225","severity":1,"message":"265","line":13,"column":8,"nodeType":"227","messageId":"228","endLine":13,"endColumn":19},{"ruleId":"225","severity":1,"message":"266","line":15,"column":8,"nodeType":"227","messageId":"228","endLine":15,"endColumn":22},{"ruleId":"267","severity":1,"message":"268","line":252,"column":71,"nodeType":"269","endLine":252,"endColumn":86},{"ruleId":"267","severity":1,"message":"268","line":255,"column":95,"nodeType":"269","endLine":255,"endColumn":110},{"ruleId":"245","severity":1,"message":"246","line":263,"column":44,"nodeType":"247","endLine":264,"endColumn":67},{"ruleId":"245","severity":1,"message":"246","line":275,"column":40,"nodeType":"247","endLine":276,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":297,"column":40,"nodeType":"247","endLine":298,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":324,"column":41,"nodeType":"247","endLine":325,"endColumn":64},{"ruleId":"245","severity":1,"message":"246","line":334,"column":40,"nodeType":"247","endLine":335,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":356,"column":40,"nodeType":"247","endLine":357,"endColumn":63},{"ruleId":"221","replacedBy":"270"},{"ruleId":"223","replacedBy":"271"},{"ruleId":"225","severity":1,"message":"272","line":4,"column":5,"nodeType":"227","messageId":"228","endLine":4,"endColumn":21},{"ruleId":"225","severity":1,"message":"273","line":6,"column":5,"nodeType":"227","messageId":"228","endLine":6,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":43,"column":49,"nodeType":"256","messageId":"257","endLine":43,"endColumn":51},{"ruleId":"225","severity":1,"message":"229","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"274","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":20},{"ruleId":"225","severity":1,"message":"275","line":2,"column":52,"nodeType":"227","messageId":"228","endLine":2,"endColumn":64},{"ruleId":"225","severity":1,"message":"237","line":4,"column":9,"nodeType":"227","messageId":"228","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":71,"column":53,"nodeType":"256","messageId":"257","endLine":71,"endColumn":55},{"ruleId":"245","severity":1,"message":"276","line":143,"column":17,"nodeType":"247","endLine":143,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":170,"column":36,"nodeType":"247","endLine":171,"endColumn":59},{"ruleId":"245","severity":1,"message":"276","line":116,"column":13,"nodeType":"247","endLine":116,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":141,"column":36,"nodeType":"247","endLine":142,"endColumn":59},{"ruleId":"225","severity":1,"message":"229","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"237","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"221","replacedBy":"277"},{"ruleId":"223","replacedBy":"278"},{"ruleId":"225","severity":1,"message":"229","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"237","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"221","replacedBy":"279"},{"ruleId":"223","replacedBy":"280"},{"ruleId":"225","severity":1,"message":"281","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":29},{"ruleId":"225","severity":1,"message":"238","line":4,"column":54,"nodeType":"227","messageId":"228","endLine":4,"endColumn":63},{"ruleId":"254","severity":1,"message":"255","line":40,"column":55,"nodeType":"256","messageId":"257","endLine":40,"endColumn":57},{"ruleId":"254","severity":1,"message":"255","line":47,"column":55,"nodeType":"256","messageId":"257","endLine":47,"endColumn":57},{"ruleId":"225","severity":1,"message":"274","line":4,"column":9,"nodeType":"227","messageId":"228","endLine":4,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":81,"column":55,"nodeType":"256","messageId":"257","endLine":81,"endColumn":57},{"ruleId":"254","severity":1,"message":"255","line":88,"column":55,"nodeType":"256","messageId":"257","endLine":88,"endColumn":57},{"ruleId":"221","replacedBy":"282"},{"ruleId":"223","replacedBy":"283"},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.",["284"],["285"],["284"],["285"],["284"],["285"],"'Dropdown' is defined but never used.","'Form' is defined but never used.","'LoginPath' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'resp' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Redirect' is defined but never used.","'options' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'HouseholdBook' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'GetHouseHoldBooksPath' is defined but never used.","'FarmAnimals' is defined but never used.","'AddFarmAnimals' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["284"],["285"],"'AddBankBooksPath' is defined but never used.","'CancelResizdentPath' is defined but never used.","'AddLandPath' is defined but never used.","'GetLandsPath' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["284"],["285"],["284"],["285"],"'AddHouseHoldBookError' is defined but never used.",["284"],["285"],"no-global-assign","no-unsafe-negation"]