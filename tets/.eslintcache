[{"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLand.js":"1","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Search.js":"2","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddBankBook.js":"3","/Users/goncharov/Desktop/tivinos-master/tets/src/index.js":"4","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/About.js":"5","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Home.js":"6","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/UsersList.js":"7","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Login.js":"8","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBookSpecification.js":"9","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddResident.js":"10","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddFarmAnimals.js":"11","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/LandTypesCreator.js":"12","/Users/goncharov/Desktop/tivinos-master/tets/src/helpers/Path.js":"13","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/LoginError.js":"14","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/Prompter.js":"15","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/HouseholdBook.js":"16","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddHouseholdBook.js":"17","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddAgriculture.js":"18","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBook.js":"19","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AgricultureTypesCreator.js":"20","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/InvalidTokenError.js":"21","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Registration.js":"22","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddTransport.js":"23","/Users/goncharov/Desktop/tivinos-master/tets/src/components/FarmAnimals.js":"24","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/AddHouseHoldBookError.js":"25","/Users/goncharov/Desktop/tivinos-master/tets/src/components/Navbar.js":"26","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLandType.js":"27","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/SuccessOrNotInformation.js":"28","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AnimalTypesCreator.js":"29"},{"size":10522,"mtime":1614926479213,"results":"30","hashOfConfig":"31"},{"size":7621,"mtime":1614937428156,"results":"32","hashOfConfig":"31"},{"size":14251,"mtime":1614924794754,"results":"33","hashOfConfig":"31"},{"size":501,"mtime":1606555060000,"results":"34","hashOfConfig":"31"},{"size":376,"mtime":1606555060000,"results":"35","hashOfConfig":"31"},{"size":503,"mtime":1614732839752,"results":"36","hashOfConfig":"31"},{"size":1485,"mtime":1607544345151,"results":"37","hashOfConfig":"31"},{"size":3861,"mtime":1614732993169,"results":"38","hashOfConfig":"31"},{"size":24260,"mtime":1615391269740,"results":"39","hashOfConfig":"31"},{"size":5948,"mtime":1614937945072,"results":"40","hashOfConfig":"31"},{"size":7325,"mtime":1608886111540,"results":"41","hashOfConfig":"31"},{"size":1870,"mtime":1608435970045,"results":"42","hashOfConfig":"31"},{"size":2543,"mtime":1614736690111,"results":"43","hashOfConfig":"31"},{"size":475,"mtime":1608156994701,"results":"44","hashOfConfig":"31"},{"size":467,"mtime":1608333159335,"results":"45","hashOfConfig":"31"},{"size":6256,"mtime":1615532910279,"results":"46","hashOfConfig":"31"},{"size":4530,"mtime":1608791807317,"results":"47","hashOfConfig":"31"},{"size":11702,"mtime":1614737971444,"results":"48","hashOfConfig":"31"},{"size":7765,"mtime":1614550987201,"results":"49","hashOfConfig":"31"},{"size":6528,"mtime":1614565893747,"results":"50","hashOfConfig":"31"},{"size":367,"mtime":1608159182387,"results":"51","hashOfConfig":"31"},{"size":5416,"mtime":1614543166667,"results":"52","hashOfConfig":"31"},{"size":3333,"mtime":1612777040071,"results":"53","hashOfConfig":"31"},{"size":1025,"mtime":1608703770704,"results":"54","hashOfConfig":"31"},{"size":483,"mtime":1608332140130,"results":"55","hashOfConfig":"31"},{"size":6131,"mtime":1615097769534,"results":"56","hashOfConfig":"31"},{"size":6407,"mtime":1614811437279,"results":"57","hashOfConfig":"31"},{"size":691,"mtime":1608719162694,"results":"58","hashOfConfig":"31"},{"size":6491,"mtime":1608877085201,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1hz04cf",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"63"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLand.js",["137","138","139","140"],"import React, {Component, Fragment} from \"react\";\nimport {Form, Modal} from \"react-bootstrap\";\nimport {\n    AddBankBooksPath,\n    AddLandPath,\n    CancelResizdentPath,\n    CreateLandCategoryPath,\n    GetLandCategory\n} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\nimport Select from \"react-select\";\nimport moment from \"moment\";\nimport Prompter from \"../errors/Prompter\";\n\nfunction isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport default class AddLand extends Component {\n\n    state = {\n        isInvalid: false,\n        isFirst: true,\n        landCategoriesOptions: [],\n        landCategories: [],\n        isCadastralNumberValid: true\n    }\n\n    componentDidMount = async () => {\n        let config = {\n            method: 'post',\n            url: AddLandPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let options = []\n\n        await axios.get(GetLandCategory, config).then(resp => {\n            console.log(resp.data.payload.categories)\n            this.setState({\n                landCategories: resp.data.payload.categories\n            })\n            this.state.landCategories.map(categ => {\n                options.push({value: categ.name, label: categ.name})\n            })\n\n            this.setState({\n                landCategoriesOptions: options\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }\n\n    addButtonPressed = async (e) => {\n        let config = {\n            method: 'post',\n            url: AddLandPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddLandPath\n\n        if(!this.cadastralNumber) {\n            this.setState({\n                isCadastralNumberValid: false\n            })\n            return\n        }\n\n        const arr = this.cadastralNumber.split(\":\")\n        let isValidCN = true\n\n        arr.map(num => {\n            isValidCN = isValidCN && (arr.length === 4) && isNumeric(num)\n            console.log(isValidCN)\n        })\n        this.setState({\n            isCadastralNumberValid: isValidCN\n        })\n\n        if(!isValidCN) return\n        isValidCN = isValidCN && (arr[0].length === 2) && (arr[1].length === 2) && (arr[2].length === 6) && (arr[3].length === 2)\n\n        this.setState({\n            isCadastralNumberValid: isValidCN\n        })\n\n        if(!this.state.isCadastralNumberValid)\n            return\n\n        let getBDate = new Date(this.documentEndDate)\n        let endDate = moment(getBDate).format('DD.MM.YYYY')\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            cadastralNumber: this.cadastralNumber,\n            document: this.document,\n            documentEndDate: endDate,\n            landCategory: this.landCategory,\n            totalArea: this.totalArea\n        }\n\n        await axios.post(url, req, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isInvalid: !res.data.success,\n                    isFirst: false\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        this.setState({\n            isApply: !this.state.isInvalid\n        })\n    }\n\n    componentWillMount() {\n        this.setState({\n            isApply: false\n        })\n    }\n\n\n    openModal = (e) => {\n        this.setState({\n            mod:true\n        })\n    }\n    closeModal = (e) => {\n        this.setState({\n            mod:false\n        })\n    }\n\n    createCategory = async (e) => {\n        let config = {\n            method: 'get',\n            url: CreateLandCategoryPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        const req = {\n            name: this.categoryName\n        }\n\n        await axios.post(CreateLandCategoryPath, req, config).then(resp => {\n            console.log(resp)\n            this.setState({\n                isInvalid: !resp.data.success,\n                isFirst: false\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n        console.log(this.state.isInvalid)\n        if(!this.state.isInvalid) {\n            window.location.reload()\n        }\n    }\n\n    selectCategory = (e) => {\n        this.landCategory = e.value\n    }\n\n\n    render() {\n        if(this.state.isApply) {\n            let path = '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName\n            return(<Redirect to={path}/>)\n        }\n        return(\n            <Fragment>\n\n                <Modal show={this.state.mod} onHide={e => this.closeModal(e)}>\n                    <Modal.Header closeButton>\n                        <h4>Добавить категорию</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Название категории\" onChange={e => this.categoryName = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={this.state.isInvalid}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-success\" onClick={e => this.createCategory(e)}>Добавить</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <h1>Добавление земельного участка</h1>\n                <Form>\n                    <Form.Group>\n\n\n\n                        <div className=\"input-group mb-3\" style={{marginTop: 30}}>\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.cadastralNumber = e.target.value} name='cadastralNumber' placeholder='Кадастровый номер участка' className=\"form-control\" aria-describedby=\"basic-addon1\" />\n                        </div>\n\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            Кадастровый номер земельного участка в формате <strong>хх:хх:хххххх:хх</strong>\n                        </div>\n\n                        <Prompter isInvalid={!this.state.isCadastralNumberValid} message=\"Неверный формат кадастрового номера\"/>\n\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.document = e.target.value} name='document' placeholder='Реквизиты документа, подтверждающие право на земельный участок' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input type=\"date\" onChange={e => this.documentEndDate = e.target.value} name='documentEndDate' placeholder='Срок окончания действия документа' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"><button onClick={e => this.openModal(e)} type=\"button\" className=\"btn btn-primary\" style={{height:20, width:20, fontWeight:5}}/></span>\n                        </div>\n                        <div className=\"mb-3\">\n\n                            <Select placeholder=\"Категория земель\"\n                                    onChange={e=>this.selectCategory(e)}\n                                    options={this.state.landCategoriesOptions}\n\n                            />\n                        </div>\n\n                        {/*<div className=\"input-group mb-3\">*/}\n                        {/*    <div className=\"input-group-prepend\">*/}\n                        {/*        <span className=\"input-group-text\" id=\"basic-addon1\"><button onClick={e => this.openModal(e)} type=\"button\" className=\"btn btn-primary\" style={{height:20, width:20, fontWeight:5}}/></span>*/}\n                        {/*    </div>*/}\n                        {/*    <input onChange={e => this.landCategory = e.target.value} name='landCategory' placeholder='Категория земель' className=\"form-control\" aria-describedby=\"basic-addon1\"/>*/}\n                        {/*</div>*/}\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.totalArea = e.target.value} name='totalArea' placeholder='Общая площадь земельного участка, занятая посевами и посадками в гектарах' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n\n                    </Form.Group>\n                </Form>\n                <SuccessOrNotInformation isInvalid={this.state.isInvalid} isFirst={this.state.isFirst}/>\n                <button style={{marginTop: 20}} type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить земельный участок</button>\n            </Fragment>\n        )\n    }\n}",["141","142"],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Search.js",["143","144"],"import React, {Fragment} from \"react\";\nimport {CancelResizdentPath, CloseBankBook, GetResidentsPath, SearchPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport {Form, Modal} from \"react-bootstrap\";\nimport moment from \"moment\";\n\nexport default class Search extends React.Component {\n\n    state = {\n        bankBooks:[],\n        isSuccess: true,\n        mod: false,\n        book: null,\n        willDeleteName: \"\",\n        isLoaded: false\n    }\n\n    componentDidMount = async () => {\n        let serachText = this.props.match.params.searchText\n        let config = {\n            method: 'get',\n            url: GetResidentsPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            },\n\n            params: {\n                query: serachText\n            }\n        };\n\n\n        await axios.get(SearchPath, config).then(resp => {\n            console.log(resp)\n            this.setState({\n                bankBooks: resp.data.payload.bankBooks,\n                isSuccess: resp.data.success\n            })\n        })\n        this.setState({\n            isLoaded:true\n        })\n    }\n\n    openModal = (e,  book) => {\n        this.setState({\n            mod: true,\n            book: book,\n            willDeleteName: book.mainFio\n        })\n    }\n\n    closeModal = (e) => {\n        this.setState({\n            mod:false,\n            book: null\n        })\n    }\n\n    onCancelButtonPressed = async (e, book) => {\n\n        let config = {\n            method: 'get',\n            url: CancelResizdentPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let date = \"\"\n\n        if(this.cancelDate) {\n            let getСreationDate = new Date(this.cancelDate)\n            date = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n\n\n        const req = {\n            bankBookName: this.state.book.name,\n            closeDate: date,\n            closeReason: this.cancelReason,\n            householdBookName: this.state.book.householdBookName,\n            kozhuunName: this.state.book.kozhuunName\n        }\n\n        console.log(req)\n\n        await axios.post(CloseBankBook, req, config).then(resp => {\n            console.log(resp)\n        })\n\n        window.location.reload()\n    }\n\n    openButtonClicked = (e, book) => {\n        this.props.history.push({pathname: '/BankBookSpecification/' + book.householdBookName + '/' + book.kozhuunName + '/' + book.name})\n    }\n\n    render() {\n\n        if(!this.state.isLoaded) {\n            return (\n                <h3>\n                    Идет поиск\n                </h3>\n            )\n        }\n\n        if(!this.state.isSuccess || (this.state.bankBooks.length === 0)) {\n            return (<h3>\n                По запросу ничего не найдено\n            </h3>)\n        }\n        return(\n            <Fragment>\n\n                <Modal show={this.state.mod} onHide={e => this.closeModal(e)}>\n                    <Modal.Header closeButton>\n                        <h4>{this.state.willDeleteName}</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Причина закрытия\" onChange={e => this.cancelReason = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        <input type=\"date\" onChange={e => this.cancelDate = e.target.value} name='issueDate' placeholder='Дата выбытия' className=\"form-control\" aria-describedby=\"basic-addon1\" style={{marginTop: 20}}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-danger\" onClick={e => this.onCancelButtonPressed(e)}>Закрыть ЛС</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Form>\n                    <h3>По запросу \"{this.props.match.params.searchText}\" найдено:</h3>\n                    <ul className=\"list-group\" style={{marginTop: 40}}>\n                        {\n                            this.state.bankBooks.map((book, index) => {\n\n                                if(book.closingDate || book.closingReason) {\n                                    return (\n                                        <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                           aria-current=\"true\">\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                <h5 className=\"mb-1\" style={{ textDecorationLine: 'line-through' }}>Книга {book.householdBookName}. {book.mainFio}</h5>\n                                            </div>\n\n                                            <small>Дата создания: {book.creationDate}</small>\n\n                                            <p className=\"mb-1\">Кожуун: {book.kozhuunName}</p>\n                                            <p className=\"mb-1\">Адрес: {book.address}</p>\n                                            <p className=\"mb-1\">ИНН: {book.inn}</p>\n                                            <p className=\"mb-1\">Доп. информация: {book.additionalInfo}</p>\n                                            <p className=\"mb-1\">Причина закрытия: {book.closingReason}</p>\n                                            <p className=\"mb-1\">Дата закрытия: {book.closingDate}</p>\n                                        </a>\n\n                                    )\n                                }\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">Книга {book.householdBookName}. {book.mainFio}</h5>\n                                        <small><button onClick={e => this.openButtonClicked(e, book)} type=\"submit\" className=\"btn btn-outline-success\" style={{position: \"absolute\", top: 10, right: 150,}}>Открыть</button></small>\n                                        <small><button  type=\"button\" className=\"btn btn-outline-danger\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModal(e, book)}>Закрыть ЛС</button></small>\n\n                                    </div>\n                                    <div>\n                                        <p className=\"mb-1\">Кожуун: {book.kozhuunName}</p>\n                                        <p className=\"mb-1\">Сумон: {book.village}</p>\n                                        <p className=\"mb-1\">Адрес: {book.address}</p>\n                                        <p className=\"mb-1\">ИНН: {book.inn}</p>\n                                        <p className=\"mb-1\">Доп. информация: {book.additionalInfo}</p>\n                                    </div>\n                                    <small>Дата создания: {book.creationDate}</small>\n                                </a>)\n                                // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                            })\n\n                        }\n                    </ul>\n                </Form>\n            </Fragment>\n\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddBankBook.js",["145","146"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport {Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router-dom\";\nimport {AddBankBooksPath, AddResidentPath, LoginPath} from \"../helpers/Path\";\nimport Select from \"react-select\";\nimport moment from 'moment'\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\nimport Prompter from \"../errors/Prompter\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\n\nconst options = [{ value: \"Мужчина\", label: \"Мужчина\" }, { value: \"Женщина\", label: \"Женщина\" }]\n\nfunction isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport default class AddBankBook extends Component {\n\n    state = {\n        isNameValid: true\n    }\n\n    addButtonPressed = async (e) => {\n\n        this.setState({\n            isFirst: false\n        })\n\n        this.setState({\n            isNameValid: isNumeric(this.name)\n        })\n        if (!this.state.isNameValid) return\n\n        if(this.creationDate !== \"\") {\n            var getСreationDate = new Date(this.creationDate)\n            var creationDate = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n        const BankBook = {\n            additionalInfo: (this.additionalInfo === \"\" ? null : this.additionalInfo),\n            address: (this.address === \"\" ? null : this.address),\n            creationDate: (this.creationDate === \"\" ? null : creationDate),\n            householdBookName: this.props.match.params.householdBookName,\n            inn: (this.inn === \"\" ? null : this.inn),\n            kozhuunName: this.props.match.params.kozhuunName,\n            name: (this.name === \"\"? null : this.name)\n        }\n\n        console.log(BankBook.name)\n\n        let isVal = ((isNumeric(this.inn) && (this.inn.length === 12)) || this.inn === null || this.inn === \"\" || this.inn.length === 0)\n\n        this.setState({\n            isInnValid: isVal\n        })\n        let isPI = ((isNumeric(this.passportId) && (this.passportId.length === 6)) || this.passportId === null || this.passportId === \"\" || this.passportId.length === 0)\n        let isPS = ((isNumeric(this.passportSeries) && (this.passportSeries.length === 4)) || this.passportSeries === null || this.passportSeries === \"\" || this.passportSeries.length === 0)\n\n        this.setState({\n            isPassportIdValid: ((isNumeric(this.passportId) && (this.passportId.length === 6)) || this.passportId === null || this.passportId === \"\" || this.passportId.length === 0),\n            isPassportSeriesValid: ((isNumeric(this.passportSeries) && (this.passportSeries.length === 4)) || this.passportSeries === null || this.passportSeries === \"\" || this.passportSeries.length === 0),\n            isValid: (this.state.isValid && isVal && isPI && isPS)\n        })\n        console.log(this.state.isValid, isVal, isPI, isPS)\n        if(!(isVal && isPI && isPS && this.name !== \"\" && this.name !== null)) {\n            this.setState({\n                isValid: false\n            })\n            return\n        }\n\n\n\n        console.log(BankBook)\n\n        let config = {\n            method: 'post',\n            url: AddBankBooksPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddBankBooksPath\n        await axios.post(url, BankBook, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isValid: (this.state.isValid && res.data.success)\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        url = AddResidentPath\n\n        if(this.birthDate !== \"\") {\n            var getBDate = new Date(this.birthDate)\n            var Bdate = moment(getBDate).format('DD.MM.YYYY')\n        }\n        if(this.issueDate != \"\") {\n            var getIsDate = new Date(this.issueDate)\n            var IsDate = moment(getIsDate).format('DD.MM.YYYY')\n        }\n\n        const resident = {\n            bankBookName: this.name,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            residents: [{\n                birthDate: (this.birthDate === \"\" ? null : Bdate),\n                gender: (this.state.gender === \"\" ? null : this.state.gender),\n                name: (this.name1 === \"\" ? null : this.name1),\n                passport: {\n                    issueDate: (this.issueDate === \"\" ? null : IsDate),\n                    issuingAuthority: (this.issuingAuthority === \"\" ? null : this.issuingAuthority),\n                    passportId: (this.passportId === \"\" ? null : this.passportId),\n                    passportSeries: (this.passportSeries === \"\" ? null : this.passportSeries)\n                },\n                relation: null,\n                residenceMark: null\n            }]\n        }\n\n        this.setState({\n            isValid: this.state.isPassportIdValid && this.state.isPassportSeriesValid\n        })\n\n        console.log(\"aaaaaa\", this.state.isPassportIdValid && this.state.isPassportSeriesValid)\n\n        if(this.state.isPassportIdValid && this.state.isPassportSeriesValid) {\n            await axios.post(url, resident, config)\n                .then(res => {\n                    console.log(res)\n                    this.setState({\n                        isValid: (res.data.success && this.state.isPassportSeriesValid && this.state.isPassportIdValid),\n                        isApply: (res.data.success && this.state.isPassportSeriesValid && this.state.isPassportIdValid)\n                    })\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n            if (this.state.isValid) {\n                this.setState({\n                    isApply: true\n                })\n            }\n        }\n\n        if(this.state.isApply) {\n            this.props.history.push({pathname: '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.name})\n        }\n\n    }\n\n    selectGender = (e) => {\n        this.setState({\n            gender: e.value\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            isValid: true,\n            isPassportIdValid: true,\n            isPassportSeriesValid: true,\n            isInnValid: true,\n            isAllFieldsFilled: true,\n            isFirst: true\n        })\n        this.creationDate = \"\"\n        this.additionalInfo = \"\"\n        this.address = \"\"\n        this.inn = \"\"\n        this.name = \"\"\n        this.birthDate = \"\"\n        this.name1 = \"\"\n        this.setState({\n            gender:\"\"\n        })\n        this.issueDate = \"\"\n        this.issuingAuthority = \"\"\n        this.passportId = \"\"\n        this.passportSeries = \"\"\n    }\n\n    render() {\n        if(this.state.isApply) {\n            let path = '/BankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName\n            return(<Redirect to={path}/>)\n        }\n        return(\n            <Fragment>\n            <Form>\n                <Form.Group>\n                    <h2>Общие данные</h2>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Обязательно</span>\n                        </div>\n                        <input onChange={e => this.name = e.target.value} name='name' placeholder='Номер лицевого счета' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <Prompter isInvalid={!this.state.isNameValid} message=\"Счет должен быть из цифр\"/>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата создания</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.creationDate = e.target.value} name='issueDate' placeholder='Дата выдачи паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.address = e.target.value} name='name' placeholder='Адрес хозяйства (название населенного пункта, название улицы, номер дома, квартиры)' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <Prompter isInvalid={!this.state.isInnValid} message=\"Неверно набран ИНН. Должно быть 12 цифор\"/>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.inn = e.target.value} name='inn' placeholder='ИНН' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.additionalInfo = e.target.value} name='additionalInfo' placeholder='Дополнительная информация' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <h2>Данные главного по хозяйству</h2>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата рождения</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.birthDate = e.target.value} name='birthDate' placeholder='Дата рождения' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Select placeholder=\"Пол (Обязательное поле)\"\n                            onChange={e=>this.selectGender(e)}\n                            options={options}\n\n                        />\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Обязательно</span>\n                        </div>\n                        <input onChange={e => this.name1 = e.target.value} name='name1' placeholder='ФИО' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Дата выдачи паспорта</span>\n                        </div>\n                        <input type=\"date\" onChange={e => this.issueDate = e.target.value} name='issueDate' placeholder='Дата выдачи паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.issuingAuthority = e.target.value} name='issuingAuthority' placeholder='Кем выдан паспорт' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n\n                        <input onChange={e => this.passportSeries = e.target.value} name='passportId' placeholder='Серия паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <Prompter isInvalid={!this.state.isPassportSeriesValid} message=\"Неверно набрана серия паспорта. Должно быть 4 цифры\"/>\n\n\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.passportId = e.target.value} name='passportSeries' placeholder='Номер паспорта' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n                    <Prompter isInvalid={!this.state.isPassportIdValid} message=\"Неверно набран номер паспорта. Должно быть 6 цифр\"/>\n\n\n                </Form.Group>\n            </Form>\n            <AddHouseHoldBookError isInvalid={!this.state.isValid} message={\"Неверные данные\"}/>\n            <Prompter isInvalid={!this.state.isAllFieldsFilled} message=\"Все поля должны быть заполнены\"/>\n            <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isValid}/>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить лицевой счет</button>\n        </Fragment>)\n    }\n}\n","/Users/goncharov/Desktop/tivinos-master/tets/src/index.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/About.js",["147"],"import React, {Fragment} from 'react';\n\nexport const About = () =>  (\n\n    <div className=\"jumbotron\">\n        <div className=\"container\">\n            <h1 className=\"display-4\">Добро пожаловать на сайт</h1>\n            <p className=\"lead\">Здесь будет появляться актуальная информация</p>\n        </div>\n    </div>\n)","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Home.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/UsersList.js",["148","149","150","151","152","153","154","155"],"import React, {Fragment, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {LoginPath, UsersListPath} from \"../helpers/Path\";\n\nexport const UsersList =  () => {\n    const url = UsersListPath\n    const user = {\n        fio: String,\n        login: String,\n        role: String\n    }\n    var config = {\n        method: 'get',\n        url: UsersListPath,\n\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization' : 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzIiwicm9sZSI6Ik9SRElOQVJZIiwiZXhwIjoxNjA3NTg2NjQxfQ.mHYdANSotQfPwlqBsm_b41UuNIyrnaSYk2L-Gj8DaihoZFWfiKEua8tRdl8uzJu1505aARX9jO1rgOWcprGbuQ'\n        },\n        data : user\n    };\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const emailHandler = (e) => {setEmail(e.target.value)}\n    const [users, setUsers] = useState([user])\n\n    var Users = [user]\n\n    var resp = axios.get(url, config).then((respnse) => {\n        Users = (JSON.parse(JSON.stringify(respnse)).data.payload.employees)\n        setUsers(Users)\n        //console.log(Users)\n    })\n    //Users = (JSON.parse(JSON.stringify(resp)).data.payload.employees)\n    //console.log(users[0].fio)\n    return (\n        <ul class=\"list-group\">\n            {\n               users.map((empl) => {\n                    return <li className=\"list-group-item\">{empl.fio} {empl.login}</li>\n                })\n\n            }\n\n        </ul>\n    )\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Login.js",["156","157","158"],"import React, {Fragment, useState, Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {CancelResizdentPath, GetUsersProfilePath, LoginPath} from \"../helpers/Path\";\nimport {Redirect} from 'react-router-dom'\nimport LoginError from '../errors/LoginError'\n\n\nexport default class Login extends Component {\n\n    state = {}\n\n    registrationButtonPressed = async e => {\n\n        e.preventDefault()\n\n        const user = {\n            username: this.username,\n            password: this.password\n        }\n\n        console.log(user)\n        var config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data : user\n        };\n\n        const url = LoginPath\n        await axios.post(url, user, config)\n            .then(res => {\n                if(res.data.success) {\n                    localStorage.setItem('token', res.data.payload.token)\n                    this.setToken(res.data.payload.token)\n                    this.props.setToken(res.data.payload.token)\n                }\n                console.log(res)\n                this.setState({\n                    isIncorrectValues: !res.data.success\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        config = {\n            method: 'get',\n            url: GetUsersProfilePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        await axios.get(GetUsersProfilePath, config).then(resp => {\n            if(resp.data.success) {\n                localStorage.setItem('role', resp.data.payload.role)\n                localStorage.setItem('fio', resp.data.payload.fio)\n            }\n        })\n        window.location.reload()\n    }\n\n    componentWillMount() {\n        this.setState({\n            isIncorrectValues: false\n        })\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('token')) {\n            window.location.href= '/HouseholdBooks'\n        }\n    }\n\n\n    setToken = token => {\n        this.setState({\n            loggedIn: true,\n            token: token\n        })\n    }\n\n    render() {\n        console.log(\"Render called\")\n        if(this.state.loggedIn) {\n            return (<Redirect to={'/HouseholdBooks'}/>)\n        }\n        return (\n            <Fragment>\n                <h1>Вход</h1>\n                <Form>\n                    <Form.Group>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.username = e.target.value} name='username' placeholder='Имя пользователя' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.password = e.target.value} name='password' type='password' placeholder='Пароль' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <LoginError isInvalid={this.state.isIncorrectValues}/>\n                    </Form.Group>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.registrationButtonPressed(e)}>Войти</button>\n            </Fragment>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBookSpecification.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React, {Component, Fragment} from \"react\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport {\n    AddFarmAnimalsPath, AddTransportPath,\n    BasePath, CancelResizdentPath, GetBankBookInfo,\n    GetFarmAnimalsPath,\n    GetHouseHoldBooksPath,\n    GetLandsPath,\n    GetResidentsPath,\n    GetTransportPath\n} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport FarmAnimals from \"../components/FarmAnimals\";\nimport moment from \"moment\";\nimport AddFarmAnimals from \"../addingPages/AddFarmAnimals\";\n\nexport default class BankBookSpecification extends Component {\n\n    state = {\n        animals: [],\n        transport: [],\n        mod: false,\n        willDeleteName: \"\",\n        willDeleteId: \"\",\n        animalsMod: false,\n        pet: \"\",\n        valueOfPets: \"\",\n        bankBook: {},\n        issueDate: null,\n        issuingAuthority: \"\",\n        passportId: \"\",\n        passportSeries: \"\",\n        passport: null,\n\n        transportMod: false,\n        transportName: \"\",\n        transportYear: \"\",\n        transportNum: \"\",\n        transportRights: \"\",\n        transportId: \"\",\n        successChangingTransport: true\n    }\n\n    componentDidMount = async () => {\n\n        let config = {\n            method: 'get',\n            url: GetResidentsPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = GetResidentsPath\n        const BBook = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName\n        }\n\n        console.log(BBook)\n\n        await axios.post(url, BBook, config).then((respnse) => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                Residents: respnse.data.payload.residents,\n            })\n\n            respnse.data.payload.residents.map(resident => {\n                if(resident.relation){ } else {\n                    this.setState({\n                        issueDate: resident.passport.issueDate,\n                        issuingAuthority: resident.passport.issuingAuthority,\n                        passportId: resident.passport.passportId,\n                        passportSeries: resident.passport.passportSeries,\n                    })\n                    if(this.state.issueDate && this.state.issueDate !== \"\") {\n                        this.setState({\n                            passport: \"Паспорт выдан \" + this.state.issueDate + \", в \" + this.state.issuingAuthority + \", \"\n                                + this.state.passportSeries + \" \" + this.state.passportId + \" \"\n                        })\n                    }\n                }\n            })\n        })\n\n        url = GetFarmAnimalsPath\n        await axios.post(url, BBook, config).then((res) => {\n            console.log(res)\n            this.setState({\n                animals: res.data.payload.animals\n            })\n        }).then(err => {\n            console.log(err)\n        })\n\n        url = GetLandsPath\n        console.log(\"sdfgjklkjhgfdsdfghjkjhgfdsdfghjklkjhgfdf\")\n        await axios.post(url, BBook, config).then((respnse) => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                Lands: respnse.data.payload.lands,\n\n            })\n        })\n\n        url = GetTransportPath\n        await axios.post(url, BBook, config).then(response => {\n            console.log(response)\n            this.setState({\n                Transport: response.data.payload.transport,\n                isLoaded: true\n            })\n        })\n\n        await axios.post(GetBankBookInfo, BBook, config).then(resp => {\n            this.setState( {\n                bankBook: resp.data.payload\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    componentWillMount() {\n        this.setState({\n            isLoaded: false\n        })\n    }\n\n    openModal = (e, id, index) => {\n        this.setState({\n            mod:true,\n            willDeleteId: id,\n            willDeleteName: this.state.Residents[index].name\n        })\n    }\n    closeModal = (e) => {\n        this.setState({\n            mod:false\n        })\n    }\n\n    openModalAnimals = (e, name, value) => {\n        this.setState({\n            animalsMod: true,\n            pet: name,\n            valueOfPets: value\n        })\n    }\n\n    closeModalAnimals = (e) => {\n        this.setState({\n            animalsMod: false\n        })\n    }\n\n    openModalTransport = (e, name, year, num, rights, id) => {\n        this.setState({\n            transportMod: true,\n            transportName: name,\n            transportYear: year,\n            transportNum: num,\n            transportRights: rights,\n            transportId: id\n        })\n    }\n\n    closeModalTransport = (e) => {\n        this.setState({\n            transportMod: false,\n            transportName: \"\",\n            transportYear: \"\",\n            transportNum: \"\",\n            transportRights: \"\",\n            transportId:  \"\"\n        })\n    }\n\n    onAnimalButtonPressed = async (e) => {\n        let config = {\n            method: 'get',\n            url: CancelResizdentPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        const req = {\n            animals: [{\n                name: this.state.pet,\n                value: this.animalValue\n            }],\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName\n        }\n\n        await axios.post(AddFarmAnimalsPath, req, config).then(resp => {\n            console.log(resp)\n        })\n\n        window.location.reload()\n    }\n\n    onCancelButtonPressed = async (e) => {\n        let config = {\n            method: 'get',\n            url: CancelResizdentPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let date = \"\"\n\n        if(this.cancelDate) {\n            var getСreationDate = new Date(this.cancelDate)\n            date = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n\n        const req = {\n            cancelDate: date,\n            cancelReason: this.cancelReason,\n            id: this.state.willDeleteId\n        }\n\n        console.log(req)\n\n        await axios.post(CancelResizdentPath, req, config).then(resp => {\n            console.log(resp)\n        })\n        window.location.reload()\n    }\n\n    onTransportChangeButtonPressed = async (e) => {\n        let config = {\n            method: 'get',\n            url: GetResidentsPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddTransportPath\n        const Transport = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName,\n            id: this.state.transportId,\n            name: this.state.transportName,\n            num: this.state.transportNum,\n            rights: this.state.transportRights,\n            year: this.state.transportYear\n        }\n\n        await axios.post(url, Transport, config).then(resp => {\n            this.setState({\n                successChangingTransport: resp.data.success\n            })\n        })\n\n        if(this.state.successChangingTransport) {\n            this.closeModalTransport()\n            window.location.reload()\n        }\n\n    }\n\n    addResidentButtonPressed = (e) => {\n        this.props.history.push({pathname : '/AddResident/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName})\n    }\n\n    addLand = (e) => {\n        this.props.history.push({pathname : '/AddLand/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName } )\n    }\n\n    addLandTypeButtonPressed = (e, index) => {\n        this.props.history.push({pathname : '/AddLandType/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName+ '/' + this.state.Lands[index].cadastralNumber})\n    }\n\n    addAgricultureTypeButtonPressed = (e, index) => {\n        this.props.history.push( {pathname : '/AddAgriculture/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName+ '/' + this.state.Lands[index].cadastralNumber} )\n    }\n\n    addFarmAnimalPressed = (e) => {\n        this.props.history.push({pathname : '/AddFarmAnimals/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName })\n    }\n\n    addTransportButtonPressed = (e) => {\n        this.props.history.push({pathname : '/AddTransport/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName })\n    }\n\n    onPrintButtonClicked = (e) => {\n        this.props.history.push({pathname : \"https://google.com\"})\n    }\n\n    render() {\n        if(!this.state.isLoaded) {\n            return (\n                <h1>Загрузка</h1>\n            )\n        }\n        const printLandsPath = BasePath + \"print/bank_book?kozhuunName=\" + this.props.match.params.kozhuunName + \"&bankBookName=\" + this.props.match.params.bankBookName + \"&householdBookName=\" + this.props.match.params.householdBookName\n        const printHHBookPath = BasePath + \"print/bank_book/summary?kozhuunName=\" + this.props.match.params.kozhuunName + \"&bankBookName=\" + this.props.match.params.bankBookName + \"&householdBookName=\" + this.props.match.params.householdBookName\n        const headString = this.state.bankBook.mainFio + (this.state.passport || this.state.bankBook.address || this.state.bankBook.inn || this.state.bankBook.additionalInfo ? \",\" : \"\")\n        console.log(headString)\n        return (\n            <Fragment>\n                <Form>\n                    <h4>Лицевой счет №{this.props.match.params.bankBookName}</h4>\n                    <h1>{(headString !== \"undefined,\" && headString !== \"undefined\") ? headString : \"\"}</h1>\n                    <h4>{this.state.passport}</h4>\n                    <h2>{this.state.bankBook.address}</h2>\n                    <h3>{this.state.bankBook.inn ? \"ИНН: \" + this.state.bankBook.inn : \"\"}</h3>\n                    <h5>{this.state.bankBook.additionalInfo ? \"Дополнительная информация: \" + this.state.bankBook.additionalInfo : \"\"}</h5>\n                </Form>\n\n                <Modal show={this.state.mod} onHide={e => this.closeModal(e)}>\n                    <Modal.Header closeButton>\n                        <h4>{this.state.willDeleteName}</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Причина выбытия\" onChange={e => this.cancelReason = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        <input type=\"date\" onChange={e => this.cancelDate = e.target.value} name='issueDate' placeholder='Дата выбытия' className=\"form-control\" aria-describedby=\"basic-addon1\" style={{marginTop: 20}}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-danger\" onClick={e => this.onCancelButtonPressed(e)}>Выбыть</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={this.state.animalsMod} onHide={e => this.closeModalAnimals(e)}>\n                    <Modal.Header closeButton>\n                        <h4>{this.state.pet}</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Новое количество\" onChange={e => this.animalValue = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-success\" onClick={e => this.onAnimalButtonPressed(e)}>Изменить</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Form>\n\n                    <div className=\"mb-3\">\n                        <a style={{marginTop:20}} className=\"App-link\" href={printHHBookPath} target=\"_blank\">Выписка из похозяйственной книги</a>\n                    </div>\n                    <h2 style={{marginTop:100}}>Члены хозяйства</h2>\n                    <ul className=\"list-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addResidentButtonPressed(e)}>Добавить члена хозяйства</button>\n                        {\n                            this.state.Residents.map((resident, index) => {\n                                if(resident.cancelReason || resident.cancelDate) {\n                                    return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                              aria-current=\"true\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\" style={{ textDecorationLine: 'line-through' }}>{index + 1}. {resident.name}</h5>\n                                            <h7>{resident.relation}</h7>\n                                        </div>\n                                        <p className=\"mb-1\">Дата рождения: {resident.birthDate}</p>\n                                        <small>Пол: {resident.gender}</small>\n                                        <p style={{marginTop: 20, textDecoration: 'black'}}>Дата выбытия: {resident.cancelDate}</p>\n                                        <p style={{marginTop: 1}}>Причина выбытия: {resident.cancelReason}</p>\n                                    </a>)\n                                }\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">{index + 1}. {resident.name}</h5>\n                                        <h7>{resident.relation}</h7>\n                                        <small><button  type=\"button\" className=\"btn btn-outline-danger\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModal(e, resident.id, index)}>Выбыть</button></small>\n\n                                    </div>\n                                    <p className=\"mb-1\">Дата рождения: {resident.birthDate}</p>\n                                    <small>Пол: {resident.gender}</small>\n                                </a>)\n                                // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                            })\n\n                        }\n                    </ul>\n                </Form>\n                <Form>\n                    <h2 style={{marginTop:100}}>Земельные участки</h2>\n                    <ul className=\"list-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addLand(e)}>Добавить земельный участок</button>\n                        {\n                            this.state.Lands.map((land, index) => {\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">Участок №{index + 1}. Кадастровый номер: {land.cadastralNumber}</h5>\n                                        <small><button type=\"submit\" onClick={e => this.addLandTypeButtonPressed(e, index)} className=\"btn btn-outline-info\" >Площадь по виду земель</button>-\n                                            <button type=\"submit\" onClick={e => this.addAgricultureTypeButtonPressed(e, index)} className=\"btn btn-outline-warning\" >Площадь земли, занятой культурами</button></small>\n                                    </div>\n                                    <p className=\"mb-1\">Документ: {land.document}</p>\n                                    <p className=\"mb-1\">Имя создателя: {land.creatorName}</p>\n                                    <p className=\"mb-1\">Категория: {land.landCategory}</p>\n                                    <small>Общая площадь: {land.totalArea}га</small>\n                                    <p>\n                                        <div className=\"mb-3\" style={{marginTop: 15}}>\n                                            <a className=\"App-link\" href={printLandsPath + \"&cadastralNumber=\" + land.cadastralNumber} target=\"_blank\">Печать прав на земельный участок</a>\n                                        </div>\n                                    </p>\n                                </a>)\n                                // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                            })\n\n                        }\n                    </ul>\n\n                </Form>\n                <Form>\n                    <h2 style={{marginTop:100}}>Сельскохозяйственные животные, птицы и пчелы</h2>\n                    <ul className=\"list-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addFarmAnimalPressed(e)}>Добавить</button>\n                        {\n                            this.state.animals.map((animal, index) => {\n                                if(animal.parentName === null) {\n                                    return(\n                                        <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                           aria-current=\"true\">\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                <h5 className=\"mb-1\">{index + 1}. {animal.name} </h5>\n                                            </div>\n                                            <small><button  type=\"button\" className=\"btn btn-outline-info\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModalAnimals(e, animal.name, animal.value)}>Изменить</button></small>\n                                            <p className=\"mb-1\">Количество: {animal.value}</p>\n                                        </a>\n                                    )\n                                }\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">{index + 1}. {animal.parentName} <small\n                                            className=\"text-muted\">{animal.name} </small></h5>\n                                    </div>\n                                    <small><button  type=\"button\" className=\"btn btn-outline-info\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModalAnimals(e, animal.name, animal.value)}>Изменить</button></small>\n\n                                    <p className=\"mb-1\">Количество: {animal.value}</p>\n                                </a>)\n                                // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                            })\n\n                        }\n                    </ul>\n                </Form>\n                <Modal show={this.state.transportMod} onHide={e => this.closeModalTransport(e)}>\n                    <Modal.Header closeButton>\n                        <h3>Изменение техники</h3>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Название\" onChange={e => this.setState({transportName: e.target.value})} className=\"form-control\" aria-describedby=\"basic-addon1\" value={this.state.transportName}/>\n                        <input style={{marginTop:10}} placeholder=\"Количество\" onChange={e => this.setState({transportNum: e.target.value})} className=\"form-control\" aria-describedby=\"basic-addon1\" value={this.state.transportNum}/>\n                        <input style={{marginTop:10}} className=\"mb-2\" placeholder=\"Права\" onChange={e => this.setState({transportRights: e.target.value})} className=\"form-control\" aria-describedby=\"basic-addon1\" value={this.state.transportRights}/>\n                        <input style={{marginTop:10}} className=\"mb-2\" placeholder=\"Год\" onChange={e => this.setState({transportYear: e.target.value})} className=\"form-control\" aria-describedby=\"basic-addon1\" value={this.state.transportYear}/>\n                        {\n                            this.state.successChangingTransport ? <div/> :\n                                <div style={{marginTop: 20}} className=\"alert alert-danger\" role=\"alert\">\n                                    Неверные данные\n                                </div>\n                        }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-success\" onClick={e => this.onTransportChangeButtonPressed(e)}>Изменить</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Form>\n                    <h2 style={{marginTop:100}}>Техника</h2>\n                    <ul className=\"list-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addTransportButtonPressed(e)}>Добавить</button>\n                        {\n                            this.state.Transport.map((transport, index) => {\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">{index + 1}. {transport.name} <small\n                                            className=\"text-muted\">({transport.year}) </small></h5>\n                                    </div>\n                                    <p className=\"mb-1\">Количество: {transport.num}</p>\n                                    <p className=\"mb-1\">Права: {transport.rights}</p>\n                                    <small><button  type=\"button\" className=\"btn btn-outline-info\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModalTransport(e, transport.name, transport.year, transport.num, transport.rights, transport.id)}>Изменить</button></small>\n                                </a>)\n                            })\n\n                        }\n                    </ul>\n                </Form>\n            </Fragment>\n\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddResident.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddFarmAnimals.js",["174","175","176"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {AddFarmAnimalsPath, GetFarmAnimalsTypesPath, LoginPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\nfunction isNumeric(value) {\n    return /^-{0,1}\\d+$/.test(value);\n}\n\nexport default class AddFarmAnimals extends Component {\n\n    state = {\n        animalTypes: {},\n        options: [],\n        isSecondField: false,\n        secondField: [],\n        options2: [],\n        name: \"\",\n        parentName: \"\",\n        isFirst: true,\n        isInvalid: false\n    }\n\n    componentDidMount = async () => {\n        let url = GetFarmAnimalsTypesPath\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        await axios.get(url, config).then( res => {\n            console.log(res)\n            res.data.payload.farmAnimals.map((animal) => {\n\n                //console.log(animal.parentName, animal.name)\n                if(animal.parentName !== \"\") {\n                    this.state.animalTypes[animal.parentName] = []\n                }\n            })\n            res.data.payload.farmAnimals.map((animal) => {\n                if(animal.parentName !== null) {\n                    this.state.animalTypes[animal.parentName].push(animal.name)\n                } else {\n                    this.state.animalTypes[animal.name] = []\n                }\n            })\n        })\n\n        var opt = []\n\n        for( var obj in this.state.animalTypes) {\n            opt.push({value: obj, label: obj})\n        }\n        this.setState({\n            options: opt\n        })\n       // console.log(this.state.animalTypes)\n    }\n\n    addNewFarmAnimalsType = (e) => {\n        this.props.history.push({pathname : '/AnimalTypesCreator/'} )\n\n    }\n\n    selectorChanged = (e) => {\n        this.setState({\n            isSecondField: this.state.animalTypes[e.value].length !== 0,\n            name: e.value\n        })\n        if(this.state.animalTypes[e.value].length !== 0) {\n            var opt2 = []\n            for(var i in this.state.animalTypes[e.value]) {\n                opt2.push({label: this.state.animalTypes[e.value][i], value : this.state.animalTypes[e.value][i]})\n            }\n            this.setState({\n                options2: opt2,\n            })\n        }\n    }\n\n    addButtonPressed = async (e) => {\n\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddFarmAnimalsPath\n\n        if(!isNumeric(this.value)) {\n            console.log(\"!!!!!   Количество должно быть int\")\n            this.setState({\n                isInvalid: true\n            })\n            return;\n        }\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            animals: [{\n                name: this.state.name,\n                value: this.value\n            }]\n        }\n        console.log(req)\n\n        await axios.post(url, req, config).then((res) => {\n            console.log(res)\n            this.setState({\n                isInvalid: !res.data.success\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n        this.setState({\n            isFirst: false\n        })\n    }\n\n    render() {\n        if(this.state.isSecondField) {\n            return (\n                <Fragment>\n                    <h1>Добавление сельскохозяйственных животных, птиц и пчел</h1>\n                    <Form>\n                        <div>\n                            <div className=\"mb-3\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.addNewFarmAnimalsType(e)}>+</button>\n\n                                <Select\n                                    placeholder='Вид'\n                                    options={this.state.options}\n                                    onChange={e => this.selectorChanged(e)}\n                                />\n                            </div>\n                            <div className=\"mb-3\">\n                                <Select\n                                    placeholder='Подвид'\n                                    options={this.state.options2}\n                                    onChange={e => this.setState({name: e.value})}\n                                />\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"/>\n                                </div>\n                                <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                            </div>\n                            <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={this.state.isInvalid}/>\n                        </div>\n                    </Form>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n                </Fragment>\n            )\n        }\n        return (\n            <Fragment>\n                <h1>Добавление сельскохозяйственных животных, птиц и пчел</h1>\n                <Form>\n                    <div>\n                        <div className=\"mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.addNewFarmAnimalsType(e)}>+</button>\n\n                            <Select\n                                placeholder='Вид'\n                                options={this.state.options}\n                                onChange={e => this.selectorChanged(e)}\n                            />\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={this.state.isInvalid}/>\n                    </div>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n            </Fragment>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/LandTypesCreator.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/helpers/Path.js",[],["177","178"],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/LoginError.js",["179","180"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class LoginError extends  Component {\n\n    render() {\n        if(this.props.isInvalid) {\n            return(\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    Неверный логин или пароль\n                </div>\n            )\n        }\n        return(<div></div>)\n    }\n}\n\nLoginError.defaultProps = {isInvalid: false}",["181","182"],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/Prompter.js",["183"],"import React, {Component} from \"react\";\nimport AddHouseHoldBookError from \"./AddHouseHoldBookError\";\n\nexport default class Prompter extends Component {\n\n\n    render() {\n        if(this.props.isInvalid) {\n            return(\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    {this.props.message}\n                </div>\n            )\n        }\n        return(<div></div>)\n    }\n}\n\nPrompter.defaultProps = {isInvalid: false, message: \"\"}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/HouseholdBook.js",["184","185","186","187"],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddHouseholdBook.js",["188","189","190","191"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport {Dropdown, Form} from \"react-bootstrap\";\nimport {AddHouseHoldBookPath, GetKozhuunsPath, LoginPath} from \"../helpers/Path\";\nimport Select from 'react-select'\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\n\nvar options = []\n\nexport default class AddHouseholdBook extends Component {\n\n    state = {}\n    async componentDidMount()  {\n        this.setState({\n            isApply: false\n        })\n\n        let config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = GetKozhuunsPath\n\n        await axios.get(url, config).then(res => {\n            console.log(res)\n            var opt = []\n            res.data.payload.kozhuuns.map((kozhuun) => {\n                console.log(kozhuun)\n                opt.push({\n                    value: kozhuun.name,\n                    label: kozhuun.name\n                })\n            })\n            this.setState({\n                options: opt\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }\n\n    addButtonPressed = async (e) => {\n\n        const HouseholdBook = {\n            kozhuunName: this.state.kozhuunName,\n            name: this.name,\n            villageName: this.villageName\n        }\n\n        console.log(HouseholdBook)\n        let config = {\n            method: 'post',\n            url: LoginPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = AddHouseHoldBookPath\n\n        await axios.post(url, HouseholdBook, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isInvalid: !res.data.success,\n                    message: res.data.message\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        this.setState({\n            isApply: true\n        })\n        if(!this.state.isInvalid) {\n            this.props.history.push({pathname : '/HouseholdBooks'})\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            isInvalid: false,\n            message: \"\"\n        })\n    }\n\n    selectCozuunName = (e) => {\n        this.setState({\n            kozhuunName: e.value\n        })\n        console.log(e.value)\n    }\n\n    render() {\n        //if(this.state.isApply) {\n          //  return (<Redirect to={'/HouseholdBooks'}/>)\n        //}\n        return(<Fragment>\n            <h1>Добавление похозяйственной книги</h1>\n            <Form>\n                <Form.Group>\n                    <div>\n                        <div className=\"mb-3\">\n                            <Select\n                                placeholder='Кожуун'\n                                onChange={e=>this.selectCozuunName(e)}\n                                options={this.state.options}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.name = e.target.value} name='name' placeholder='Номер книги' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                        </div>\n                        <input onChange={e => this.villageName = e.target.value} name='villageName' placeholder='Название сумона' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                    </div>\n\n                    <AddHouseHoldBookError message={this.state.message} isInvalid={this.state.isInvalid}/>\n\n                </Form.Group>\n            </Form>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить книгу</button>\n        </Fragment>)\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddAgriculture.js",["192","193","194","195","196","197","198","199"],"import React, {Component, Fragment} from \"react\";\nimport {AddAgriculturePath, AddLandTypePath, GetAgriculturePath, GetLandPath, GetLendTypesPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport {Form} from \"react-bootstrap\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\nexport default class AddAgriculture extends Component {\n\n    state = {\n        agricultures: {},\n        agriculturesTypes: {},\n        options: [],\n        isSecondField: false,\n        secondField: [],\n        options2: [],\n        name: \"\",\n        parentName: \"\",\n        agr: [],\n        isSuccess: true,\n        isFirst: true\n    }\n\n    componentDidMount = async () => {\n        let config = {\n            method: 'post',\n            url: GetLendTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        };\n\n        let url = GetAgriculturePath\n\n        await axios.get(url, config).then( res => {\n            console.log(res)\n            res.data.payload.agricultures.map((agriculture) => {\n\n                if(agriculture.parentName !== \"\") {\n                    this.state.agriculturesTypes[agriculture.parentName] = []\n                }\n            })\n            res.data.payload.agricultures.map((agriculture) => {\n                if(agriculture.parentName !== null) {\n                    this.state.agriculturesTypes[agriculture.parentName].push(agriculture.name)\n                } else {\n                    this.state.agriculturesTypes[agriculture.name] = []\n                }\n            })\n        })\n        let opt = []\n\n        for(let obj in this.state.agriculturesTypes) {\n            opt.push({value: obj, label: obj})\n        }\n        this.setState({\n            options: opt\n        })\n\n        url = GetLandPath\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            cadastralNumber: this.props.match.params.cadastralNumber,\n        }\n\n        axios.post(url, req, config).then(resp => {\n\n            console.log(resp)\n\n            this.setState({\n                agr: resp.data.payload.agricultures\n            })\n        })\n\n        this.state.options.map(opt => {\n            console.log(opt)\n        })\n\n        let ind = -1\n        this.state.options.map((opt, index) => {\n            if(opt.value === \"null\")\n                ind = index\n        })\n        if (ind > -1) {\n            this.state.options.splice(ind, 1);\n        }\n\n        this.setState({\n            isApply: true\n        })\n    }\n\n    selectorChanged = (e) => {\n\n        this.setState({\n            isSecondField: this.state.agriculturesTypes[e.value].length !== 0,\n            name: e.value\n        })\n        if(this.state.agriculturesTypes[e.value].length !== 0) {\n            var opt2 = []\n            for(var i in this.state.agriculturesTypes[e.value]) {\n                opt2.push({label: this.state.agriculturesTypes[e.value][i], value : this.state.agriculturesTypes[e.value][i]})\n            }\n            this.setState({\n                options2: opt2,\n            })\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            isApply: false\n        })\n    }\n\n    agriculturesCreatorButtonPressed = () => {\n        this.props.history.push({pathname : '/AgricultureTypeCreator'})\n    }\n\n    addButtonPressed = async () => {\n        let config = {\n            method: 'post',\n            url: AddLandTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        let url = AddAgriculturePath\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            land: this.props.match.params.cadastralNumber,\n            agricultures: [{\n                agriculture: this.state.name,\n                value: this.value\n            }]\n        }\n\n\n        console.log(req)\n\n        console.log(url)\n        await axios.post(url, req, config)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    isSuccess: res.data.success,\n                    isFirst: false\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        if(this.state.isSuccess)\n            window.location.reload()\n    }\n\n    render() {\n        console.log(\"Salam\")\n        if(!this.state.isApply) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        if(this.state.isSecondField) {\n            return (\n                <Fragment>\n                    <h1>Добавление площади земли, занятой культурами</h1>\n                    <Form>\n                        <div>\n                            <div className=\"mb-3\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.agriculturesCreatorButtonPressed(e)}>+</button>\n\n                                <Select\n                                    placeholder='Вид'\n                                    options={this.state.options}\n                                    onChange={e => this.selectorChanged(e)}\n                                />\n                            </div>\n                            <div className=\"mb-3\">\n                                <Select\n                                    placeholder='Подвид'\n                                    options={this.state.options2}\n                                    onChange={e => this.setState({name: e.value})}\n                                />\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"/>\n                                </div>\n                                <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                            </div>\n                        </div>\n                    </Form>\n\n                    <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isSuccess}/>\n\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n\n                    <div style={{marginTop: 20}}>\n                        {\n                            this.state.agr.map((agr, index) => {\n                                if(agr.parentAgriculture) {\n                                    return (\n                                        <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                               aria-current=\"true\">\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                <h5 className=\"mb-1\">{agr.parentAgriculture} {agr.agriculture}</h5>\n                                            </div>\n                                            <p className=\"mb-1\">Создатель: {agr.creatorName}</p>\n                                            <small>Количество: {agr.area}</small>\n                                        </a>\n                                    )\n                                }\n                                return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                          aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\">{agr.agriculture}</h5>\n                                    </div>\n                                    <p className=\"mb-1\">Создатель: {agr.creatorName}</p>\n                                    <small>Количество: {agr.area}</small>\n                                </a>)\n                            })\n\n                        }\n                    </div>\n                </Fragment>\n            )\n        }\n        return (\n            <Fragment>\n                <h1>Добавление площади земли, занятой культурами</h1>\n                <Form>\n                    <div>\n                        <div className=\"mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.agriculturesCreatorButtonPressed(e)}>+</button>\n\n                            <Select\n                                placeholder='Вид'\n                                options={this.state.options}\n                                onChange={e => this.selectorChanged(e)}\n                            />\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.value = e.target.value} name='value' placeholder='Количество' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                    </div>\n                </Form>\n\n                <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isSuccess}/>\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n\n                <div style={{marginTop: 20}}>\n                    {\n                        this.state.agr.map((agr, index) => {\n                            if(agr.parentAgriculture) {\n                                return (\n                                    <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                       aria-current=\"true\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\">{agr.parentAgriculture} {agr.agriculture}</h5>\n                                        </div>\n                                        <p className=\"mb-1\">Создатель: {agr.creatorName}</p>\n                                        <small>Количество: {agr.area}</small>\n                                    </a>\n                                )\n                            }\n                            return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                      aria-current=\"true\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{agr.agriculture}</h5>\n                                </div>\n                                <p className=\"mb-1\">Создатель: {agr.creatorName}</p>\n                                <small>Количество: {agr.area}</small>\n                            </a>)\n                        })\n\n                    }\n                </div>\n            </Fragment>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/pages/BankBook.js",["200","201","202"],"import React, {Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport HouseholdBook from \"./HouseholdBook\";\nimport {CancelResizdentPath, CloseBankBook, GetBankBooksPath, GetHouseHoldBooksPath} from \"../helpers/Path\";\nimport {Form, Modal} from \"react-bootstrap\";\nimport moment from \"moment\";\n\nexport default class BankBook extends Component {\n\n    componentDidMount() {\n        let config = {\n            method: 'get',\n            url: GetHouseHoldBooksPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        console.log(this.props.match.params.householdBookName)\n        console.log(this.props.match.params.kozhuunName)\n\n        const HHBook = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName\n        }\n\n        let url = GetBankBooksPath\n        axios.post(url, HHBook, config).then((respnse) => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                bankBooks: respnse.data.payload.bankBooks,\n                didLoad: true\n            })\n        })\n    }\n    componentWillMount() {\n        this.setState({\n            HouseholdBook: {\n                householdBookName: this.props.match.params.householdBookName,\n                kozhuunName: this.props.match.params.kozhuunName\n            },\n            mod:false,\n            ind: -1,\n            willDeleteName: \"\"\n        })\n    }\n\n    addButtonClicked = (e) => {\n        console.log({pathname : '/AddBankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName})\n        this.props.history.push({pathname : '/AddBankBook/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName})\n    }\n\n    openButtonClicked = (e, ind) => {\n        this.props.history.push({pathname: '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.state.bankBooks[ind].name})\n    }\n\n    openModal = (e,  index) => {\n        this.setState({\n            mod: true,\n            ind: index,\n            willDeleteName: this.state.bankBooks[index].mainFio\n        })\n    }\n\n    closeModal = (e) => {\n        this.setState({\n            mod:false,\n            ind: -1\n        })\n    }\n\n    onCancelButtonPressed = async (e) => {\n\n        let config = {\n            method: 'get',\n            url: CancelResizdentPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let date = \"\"\n\n        if(this.cancelDate) {\n            let getСreationDate = new Date(this.cancelDate)\n            date = moment(getСreationDate).format('DD.MM.YYYY')\n        }\n\n\n        const req = {\n            bankBookName: this.state.bankBooks[this.state.ind].name,\n            closeDate: date,\n            closeReason: this.cancelReason,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName\n        }\n\n        console.log(req)\n\n        await axios.post(CloseBankBook, req, config).then(resp => {\n            console.log(resp)\n        })\n\n        window.location.reload()\n    }\n\n    render() {\n        if(!this.state.didLoad) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        return(\n            <Fragment>\n                <Form>\n                    <h1>{this.props.match.params.kozhuunName}</h1>\n                </Form>\n\n                <Modal show={this.state.mod} onHide={e => this.closeModal(e)}>\n                    <Modal.Header closeButton>\n                        <h4>{this.state.willDeleteName}</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input placeholder=\"Причина закрытия\" onChange={e => this.cancelReason = e.target.value} className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        <input type=\"date\" onChange={e => this.cancelDate = e.target.value} name='issueDate' placeholder='Дата выбытия' className=\"form-control\" aria-describedby=\"basic-addon1\" style={{marginTop: 20}}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button  type=\"button\" className=\"btn btn-outline-danger\" onClick={e => this.onCancelButtonPressed(e)}>Закрыть ЛС</button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Form>\n                <ul className=\"list-group\">\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonClicked(e)} style={{marginTop:20}}>Добавить Лицевой счет</button>\n                {\n                    this.state.bankBooks.map((book, index) => {\n\n                        if(book.closingDate || book.closingReason) {\n                            return (\n                                <a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                       aria-current=\"true\">\n                                    <div className=\"d-flex w-100 justify-content-between\">\n                                        <h5 className=\"mb-1\" style={{ textDecorationLine: 'line-through' }}>{book.name}. {book.mainFio}</h5>\n                                    </div>\n                                    <p className=\"mb-1\">Сумон: {this.props.match.params.villageName}</p>\n\n                                    <small>Дата создания: {book.creationDate}</small>\n                                    <p className=\"mb-1\">Адрес: {book.address}</p>\n                                    <p className=\"mb-1\">Доп. информация: {book.additionalInfo}</p>\n                                    <p className=\"mb-1\">Причина закрытия: {book.closingReason}</p>\n                                    <p className=\"mb-1\">Дата закрытия: {book.closingDate}</p>\n                                </a>\n\n                            )\n                        }\n                        return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                  aria-current=\"true\">\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1\">{book.name}. {book.mainFio}</h5>\n                                <small><button onClick={e => this.openButtonClicked(e, index)} type=\"submit\" className=\"btn btn-outline-success\" style={{position: \"absolute\", top: 10, right: 150,}}>Открыть</button></small>\n                                <small><button  type=\"button\" className=\"btn btn-outline-danger\" style={{position: \"absolute\", top: 10, right: 10,}} onClick={e => this.openModal(e, index)}>Закрыть ЛС</button></small>\n                            </div>\n                            <p className=\"mb-1\">Сумон: {this.props.match.params.villageName}</p>\n                            <p className=\"mb-1\">Адрес: {book.address}</p>\n                            <p className=\"mb-1\">Доп. информация: {book.additionalInfo}</p>\n                            <small>Дата создания: {book.creationDate}</small>\n                        </a>)\n                       // return <li className=\"list-group-item\">{index}  {empl.creatorName} {empl.kozhuunName} {empl.name}</li>\n                    })\n\n                }\n                </ul>\n                </Form>\n            </Fragment>\n\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AgricultureTypesCreator.js",["203","204","205"],"import React, {Component, Fragment} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {\n    AddLandPath,\n    CreateAgricultureType,\n    CreateAnimalTypePath,\n    GetAgriculturePath,\n    GetFarmAnimalsTypesPath\n} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport SuccessOrNotInformation from \"../errors/SuccessOrNotInformation\";\n\nexport default class AgricultureTypesCreator extends Component {\n\n    state = {\n        isCheckbox: false,\n        options: [],\n        agricultures: {},\n        isFirst: true,\n        isValid: true\n    }\n\n    checkboxChanged = e => {\n        this.setState({\n            isCheckbox: e.target.checked\n        })\n    }\n\n    addButtonPressed =  (e) => {\n        let url = CreateAgricultureType\n\n        let config = {\n            method: 'post',\n            url: CreateAnimalTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        var req\n\n        if(this.name2 === \"\") {\n            req = {\n                name: this.name\n            }\n        } else {\n            req = {\n                name: this.name2,\n                parentName: this.name\n            }\n        }\n\n        console.log(req)\n\n        axios.post(url, req, config)\n            .then( res =>{\n                this.setState({\n                    isValid: res.data.success,\n                    isFirst: false\n                })\n                console.log(res)\n            }).catch( err => {\n            console.log(err)\n        })\n    }\n\n    componentDidMount = async () => {\n\n        this.name2 = \"\"\n\n        let url = GetAgriculturePath\n        let config = {\n            method: 'post',\n            url: GetFarmAnimalsTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        await axios.get(url, config).then( res => {\n            console.log(res)\n            res.data.payload.agricultures.map((animal) => {\n\n                //console.log(animal.parentName, animal.name)\n                if(animal.parentName !== \"\") {\n                    this.state.agricultures[animal.parentName] = []\n                }\n            })\n            res.data.payload.agricultures.map((animal) => {\n                if(animal.parentName !== null) {\n                    this.state.agricultures[animal.parentName].push(animal.name)\n                } else {\n                    this.state.agricultures[animal.name] = []\n                }\n            })\n        })\n\n        let opt = []\n\n        for( let obj in this.state.agricultures) {\n            opt.push({value: obj, label: obj})\n        }\n        this.setState({\n            options: opt\n        })\n        // console.log(this.state.animalTypes)\n    }\n\n    selectorChanged = (e) => {\n        this.name = e.value\n    }\n\n    render() {\n        const {isCheckbox} = this.state;\n        console.log(isCheckbox)\n        if(!isCheckbox) {\n            return (\n                <Fragment>\n                    <h1>Добавление типов площади земли занятой культурами</h1>\n                    <Form>\n                        <div>\n                            <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isValid}/>\n\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Является ли подвидом .\n                                    <input type=\"checkbox\" checked={isCheckbox}\n                                           onChange={e => this.checkboxChanged(e)}/></span>\n                                </div>\n                                <input onChange={e => this.name = e.target.value} name='name' placeholder='Вид'\n                                       className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                            </div>\n                        </div>\n                    </Form>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить\n                    </button>\n                </Fragment>\n            )\n        }\n        return (\n            <Fragment>\n                <h1>Добавление типов площади земли занятой культурами</h1>\n                <Form>\n                    <div>\n                        <SuccessOrNotInformation isFirst={this.state.isFirst} isInvalid={!this.state.isValid}/>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Является ли подвидом .\n                                    <input type=\"checkbox\" checked={isCheckbox}\n                                           onChange={e => this.checkboxChanged(e)}/></span>\n                            </div>\n                            <input onChange={e => this.name2 = e.target.value} name='name' placeholder='Подвид'\n                                   className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"mb-3\">\n                            <Select\n                                placeholder='Вид'\n                                options={this.state.options}\n                                onChange={e => this.selectorChanged(e)}\n                            />\n                        </div>\n\n                        {/*<div className=\"input-group mb-3\">*/}\n                        {/*    <div className=\"input-group-prepend\">*/}\n                        {/*        <span className=\"input-group-text\" id=\"basic-addon1\"></span>*/}\n                        {/*    </div>*/}\n                        {/*    <input onChange={e => this.name = e.target.value} name='name' placeholder='Вид'*/}\n                        {/*           className=\"form-control\" aria-describedby=\"basic-addon1\"/>*/}\n                        {/*</div>*/}\n                    </div>\n                </Form>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить\n                </button>\n            </Fragment>\n        )\n    }\n\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/InvalidTokenError.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/pages/Registration.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddTransport.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/components/FarmAnimals.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/errors/AddHouseHoldBookError.js",["206","207"],"/Users/goncharov/Desktop/tivinos-master/tets/src/components/Navbar.js",["208","209","210","211"],"import React, {useState, Fragment, Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport axios from \"axios\";\nimport {GetUsersProfilePath} from \"../helpers/Path\";\n\nexport default class Navbar extends Component {\n\n    state = {\n        searchText: \"\"\n    };\n\n    componentDidMount = async () => {\n        console.log(localStorage.getItem('token'))\n\n        let config = {\n            method: 'get',\n            url: GetUsersProfilePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        await axios.get(GetUsersProfilePath, config).then(resp => {\n            if(resp.data.success) {\n                localStorage.setItem('role', resp.data.payload.role)\n                localStorage.setItem('fio', resp.data.payload.fio)\n            }\n        })\n\n        this.setState({\n            token: localStorage.getItem('token'),\n            role: localStorage.getItem('role'),\n            fio: localStorage.getItem('fio')\n        })\n    }\n\n    logoutButtonPressed = e => {\n        localStorage.clear()\n        this.setState({\n            token: null,\n            role: null,\n            fio: null\n        })\n        window.location.reload()\n        window.location.href=\"/login\"\n        //this.props.history.push({pathname:'/'})\n    }\n\n    searchKeyPressed = (e) => {\n        //e.preventDefault();\n        console.log(e.key)\n        console.log(this.state.searchText)\n\n        if(e.key === 'Enter') {\n            return\n            //window.open(\"/Search/\" + this.state.searchText)\n            //this.props.history.push({path: \"/Search/\" + this.state.searchText})\n            //this.onSearchButtonClicked()\n        }\n    }\n\n    onSearchButtonClicked = (e) => {\n        e.preventDefault();\n        console.log(this.state.searchText)\n        window.location.href=\"/Search/\" + this.state.searchText\n    }\n\n    render() {\n        if(this.state.token) {\n            if(this.state.role === \"ADMIN\") {\n                return (\n                    <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n                        <div className=\"navbar-brand\">\n                            Похозяйственный учет\n                        </div>\n\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link disabled\" style={{color: \"#ffc107\"}} href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">{this.state.fio}</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/users/registration\">\n                                    Регистрация\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/HouseholdBooks\">\n                                    Реестр похозяйственных книг\n                                </NavLink>\n                            </li>\n                            <form className=\"form-inline my-2 my-lg-0\" style={{position: \"absolute\", top: 10, right: 10,}}>\n                                <input className=\"form-control mr-sm-2\"\n                                       aria-label=\"Search\" onChange={e => this.setState({searchText: e.target.value})} onKeyPress={e => this.searchKeyPressed(e)}/>\n                                    <button className=\"btn btn-success \" type=\"button\" onClick={e => this.onSearchButtonClicked(e)}>Поиск</button>\n                            </form>\n                            <button className=\"btn btn-primary\" onClick={e => this.logoutButtonPressed(e)}>Выйти</button>\n                        </ul>\n                    </nav>\n                )\n            } else {\n                return (\n                    <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n                        <div className=\"navbar-brand\">\n                            Похозяйственный учет\n                        </div>\n\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link disabled\" style={{color: \"#ffc107\"}} href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">{this.state.fio}</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/HouseholdBooks\">\n                                    Реестр похозяйственных книг\n                                </NavLink>\n                            </li>\n                            <form className=\"form-inline my-2 my-lg-0\" style={{position: \"absolute\", top: 10, right: 10,}}>\n                                <input className=\"form-control mr-sm-2\"\n                                       aria-label=\"Search\"  onChange={e => this.setState({searchText: e.target.value})} onKeyPress={e => this.searchKeyPressed(e)}/>\n                                <button className=\"btn btn-success\" type=\"button\" onClick={e => this.onSearchButtonClicked(e)}>Поиск</button>\n                            </form>\n                            <button className=\"btn btn-primary\" onClick={e => this.logoutButtonPressed(e)}>Выйти</button>\n                        </ul>\n                    </nav>\n                )\n            }\n        }\n        return (\n            <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n                <div className=\"navbar-brand\">\n                    Похозяйственный учет\n                </div>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/login\">\n                            Авторизация\n                        </NavLink>\n                    </li>\n\n                </ul>\n            </nav>\n\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/addingPages/AddLandType.js",["212","213","214","215","216","217","218","219"],"import React, {Component, Fragment} from \"react\";\nimport {AddLandPath, AddLandTypePath, GetLandPath, GetLandsPath, GetLendTypesPath} from \"../helpers/Path\";\nimport axios from \"axios\";\nimport {Form} from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport {Redirect} from \"react-router-dom\";\nimport AddHouseHoldBookError from \"../errors/AddHouseHoldBookError\";\n\nexport default class AddLandType extends Component {\n\n    addButtonPressed = async (e) => {\n        let config = {\n            method: 'post',\n            url: AddLandTypePath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n        let url = AddLandTypePath\n\n        const req = {\n            bankBookName: this.props.match.params.bankBookName,\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            land: this.props.match.params.cadastralNumber,\n            landTypes: [{\n                landType: this.state.landType,\n                value: this.value\n            }]\n        }\n\n        console.log(req)\n\n        await axios.post(url, req, config)\n            .then(res => {\n                console.log(res)\n\n                this.setState({\n                    isSuccess: res.data.success\n                })\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        this.setState({\n            isFirst: false\n        })\n\n        if(this.state.isSuccess)\n            window.location.reload()\n    }\n\n\n    componentDidMount = async () => {\n        let config = {\n            method: 'post',\n            url: GetLendTypesPath,\n\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : localStorage.getItem('token')\n            }\n        };\n\n        let url = GetLendTypesPath\n        await axios.get(url, config)\n            .then(res => {\n                console.log(res)\n                var opt = []\n                res.data.payload.landTypes.map((lt) => {\n                    opt.push({value: lt.name, label: lt.name})\n                })\n                console.log(opt)\n                this.setState({\n                    landTypes: res.data.payload.landTypes,\n                    options: opt\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        url = GetLandPath\n        const req = {\n            householdBookName: this.props.match.params.householdBookName,\n            kozhuunName: this.props.match.params.kozhuunName,\n            bankBookName: this.props.match.params.bankBookName,\n            cadastralNumber: this.props.match.params.cadastralNumber\n        }\n\n        console.log(url)\n\n        await axios.post(url, req, config).then(respnse => {\n            console.log(respnse)\n            //console.log(Users)\n            this.setState({\n                landTypes1: respnse.data.payload.landTypes\n            })\n            console.log(respnse)\n        })\n        \n        this.setState({\n            isApply: true\n        })\n    }\n\n    componentWillMount() {\n        this.setState({\n            isApply: false,\n            options: [],\n            isSuccess: true,\n            isFirst: true\n        })\n    }\n\n    selectorChanged = (e) => {\n        console.log(e.value)\n        this.setState({\n            landType: e.value\n        })\n    }\n\n    landCreatorButtonPressed = (e) => {\n        this.props.history.push({pathname : '/LandTypesCreator'})\n    }\n\n    render() {\n        console.log(\"Salam\")\n        if(!this.state.isApply) {\n            return (\n                <h1>\n                    Загрузка...\n                </h1>\n            )\n        }\n        // if(this.state.isSuccess && !this.state.isFirst) {\n        //     let path = '/BankBookSpecification/' + this.props.match.params.householdBookName + '/' + this.props.match.params.kozhuunName + '/' + this.props.match.params.bankBookName\n        //     return(<Redirect to={path}/>)\n        // }\n        console.log(this.state.landTypes1)\n        return (\n                <a>\n                    <div>\n                        <div className=\"mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={e => this.landCreatorButtonPressed(e)}>+</button>\n\n                            <Select\n                                placeholder='Вид'\n                                onChange={e=>this.selectorChanged(e)}\n                                options={this.state.options}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\"></span>\n                            </div>\n                            <input onChange={e => this.value = e.target.value} placeholder='Площадь (га)' className=\"form-control\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <AddHouseHoldBookError message=\"Неверные данные\" isInvalid={!this.state.isSuccess}/>\n                        <div className=\"input-group mb-3\">\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={e => this.addButtonPressed(e)}>Добавить</button>\n                        </div>\n                    </div>\n                    <div>\n                    {\n                        this.state.landTypes1.map((landType, index) => {\n                            return(<a href=\"#\" className=\"list-group-item list-group-item-action\"\n                                      aria-current=\"true\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1\">{landType.landType}</h5>\n                                </div>\n                                <p className=\"mb-1\">Создатель: {landType.creatorName}</p>\n                                <small>Площадь: {landType.area}</small>\n                            </a>)\n                        })\n\n                    }\n                    </div>\n\n                </a>\n        )\n    }\n}","/Users/goncharov/Desktop/tivinos-master/tets/src/errors/SuccessOrNotInformation.js",[],"/Users/goncharov/Desktop/tivinos-master/tets/src/CreatePages/AnimalTypesCreator.js",["220","221","222"],{"ruleId":"223","severity":1,"message":"224","line":4,"column":5,"nodeType":"225","messageId":"226","endLine":4,"endColumn":21},{"ruleId":"223","severity":1,"message":"227","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":6,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":49,"column":49,"nodeType":"230","messageId":"231","endLine":49,"endColumn":51},{"ruleId":"228","severity":1,"message":"229","line":85,"column":21,"nodeType":"230","messageId":"231","endLine":85,"endColumn":23},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":142,"column":41,"nodeType":"238","endLine":143,"endColumn":64},{"ruleId":"236","severity":1,"message":"237","line":160,"column":40,"nodeType":"238","endLine":161,"endColumn":63},{"ruleId":"223","severity":1,"message":"239","line":5,"column":44,"nodeType":"225","messageId":"226","endLine":5,"endColumn":53},{"ruleId":"240","severity":1,"message":"241","line":105,"column":27,"nodeType":"242","messageId":"243","endLine":105,"endColumn":29},{"ruleId":"223","severity":1,"message":"244","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"244","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"245","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"239","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":18},{"ruleId":"223","severity":1,"message":"246","line":23,"column":12,"nodeType":"225","messageId":"226","endLine":23,"endColumn":17},{"ruleId":"223","severity":1,"message":"247","line":24,"column":12,"nodeType":"225","messageId":"226","endLine":24,"endColumn":20},{"ruleId":"223","severity":1,"message":"248","line":24,"column":22,"nodeType":"225","messageId":"226","endLine":24,"endColumn":33},{"ruleId":"223","severity":1,"message":"249","line":26,"column":11,"nodeType":"225","messageId":"226","endLine":26,"endColumn":23},{"ruleId":"223","severity":1,"message":"250","line":31,"column":9,"nodeType":"225","messageId":"226","endLine":31,"endColumn":13},{"ruleId":"223","severity":1,"message":"251","line":1,"column":26,"nodeType":"225","messageId":"226","endLine":1,"endColumn":34},{"ruleId":"223","severity":1,"message":"252","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":17},{"ruleId":"223","severity":1,"message":"227","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":28},{"ruleId":"223","severity":1,"message":"253","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":15},{"ruleId":"223","severity":1,"message":"254","line":7,"column":5,"nodeType":"225","messageId":"226","endLine":7,"endColumn":26},{"ruleId":"223","severity":1,"message":"255","line":13,"column":8,"nodeType":"225","messageId":"226","endLine":13,"endColumn":19},{"ruleId":"223","severity":1,"message":"256","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":72,"column":57,"nodeType":"230","messageId":"231","endLine":72,"endColumn":59},{"ruleId":"257","severity":1,"message":"258","line":357,"column":95,"nodeType":"259","endLine":357,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":365,"column":44,"nodeType":"238","endLine":366,"endColumn":67},{"ruleId":"236","severity":1,"message":"237","line":377,"column":40,"nodeType":"238","endLine":378,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":400,"column":40,"nodeType":"238","endLine":401,"endColumn":63},{"ruleId":"257","severity":1,"message":"258","line":413,"column":136,"nodeType":"259","endLine":413,"endColumn":151},{"ruleId":"236","severity":1,"message":"237","line":432,"column":41,"nodeType":"238","endLine":433,"endColumn":64},{"ruleId":"236","severity":1,"message":"237","line":442,"column":40,"nodeType":"238","endLine":443,"endColumn":63},{"ruleId":"260","severity":1,"message":"261","line":465,"column":157,"nodeType":"259","endLine":465,"endColumn":181},{"ruleId":"260","severity":1,"message":"261","line":466,"column":153,"nodeType":"259","endLine":466,"endColumn":177},{"ruleId":"236","severity":1,"message":"237","line":485,"column":40,"nodeType":"238","endLine":486,"endColumn":63},{"ruleId":"223","severity":1,"message":"239","line":4,"column":54,"nodeType":"225","messageId":"226","endLine":4,"endColumn":63},{"ruleId":"228","severity":1,"message":"229","line":40,"column":55,"nodeType":"230","messageId":"231","endLine":40,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":47,"column":55,"nodeType":"230","messageId":"231","endLine":47,"endColumn":57},{"ruleId":"232","replacedBy":"262"},{"ruleId":"234","replacedBy":"263"},{"ruleId":"223","severity":1,"message":"244","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"223","severity":1,"message":"245","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"232","replacedBy":"264"},{"ruleId":"234","replacedBy":"265"},{"ruleId":"223","severity":1,"message":"266","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"223","severity":1,"message":"267","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":102,"column":59,"nodeType":"259","endLine":102,"endColumn":74},{"ruleId":"236","severity":1,"message":"237","line":137,"column":40,"nodeType":"238","endLine":138,"endColumn":63},{"ruleId":"268","severity":1,"message":"269","line":147,"column":31,"nodeType":"270","messageId":"271","endLine":147,"endColumn":133},{"ruleId":"223","severity":1,"message":"272","line":3,"column":9,"nodeType":"225","messageId":"226","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"252","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"273","line":9,"column":5,"nodeType":"225","messageId":"226","endLine":9,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":34,"column":53,"nodeType":"230","messageId":"231","endLine":34,"endColumn":55},{"ruleId":"228","severity":1,"message":"229","line":39,"column":61,"nodeType":"230","messageId":"231","endLine":39,"endColumn":63},{"ruleId":"228","severity":1,"message":"229","line":45,"column":61,"nodeType":"230","messageId":"231","endLine":45,"endColumn":63},{"ruleId":"228","severity":1,"message":"229","line":80,"column":36,"nodeType":"230","messageId":"231","endLine":80,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":85,"column":45,"nodeType":"230","messageId":"231","endLine":85,"endColumn":47},{"ruleId":"236","severity":1,"message":"237","line":217,"column":41,"nodeType":"238","endLine":218,"endColumn":68},{"ruleId":"236","severity":1,"message":"237","line":227,"column":40,"nodeType":"238","endLine":228,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":274,"column":37,"nodeType":"238","endLine":275,"endColumn":60},{"ruleId":"236","severity":1,"message":"237","line":284,"column":36,"nodeType":"238","endLine":285,"endColumn":59},{"ruleId":"223","severity":1,"message":"274","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":147,"column":33,"nodeType":"238","endLine":148,"endColumn":60},{"ruleId":"236","severity":1,"message":"237","line":163,"column":32,"nodeType":"238","endLine":164,"endColumn":55},{"ruleId":"223","severity":1,"message":"275","line":5,"column":5,"nodeType":"225","messageId":"226","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":87,"column":56,"nodeType":"230","messageId":"231","endLine":87,"endColumn":58},{"ruleId":"228","severity":1,"message":"229","line":94,"column":56,"nodeType":"230","messageId":"231","endLine":94,"endColumn":58},{"ruleId":"223","severity":1,"message":"244","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"223","severity":1,"message":"245","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"251","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"244","line":1,"column":26,"nodeType":"225","messageId":"226","endLine":1,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":81,"column":33,"nodeType":"238","endLine":81,"endColumn":137},{"ruleId":"236","severity":1,"message":"237","line":111,"column":33,"nodeType":"238","endLine":111,"endColumn":137},{"ruleId":"223","severity":1,"message":"244","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":35},{"ruleId":"223","severity":1,"message":"275","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":20},{"ruleId":"223","severity":1,"message":"276","line":2,"column":52,"nodeType":"225","messageId":"226","endLine":2,"endColumn":64},{"ruleId":"223","severity":1,"message":"245","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":13},{"ruleId":"223","severity":1,"message":"272","line":6,"column":9,"nodeType":"225","messageId":"226","endLine":6,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":74,"column":53,"nodeType":"230","messageId":"231","endLine":74,"endColumn":55},{"ruleId":"236","severity":1,"message":"277","line":146,"column":17,"nodeType":"238","endLine":146,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":173,"column":36,"nodeType":"238","endLine":174,"endColumn":59},{"ruleId":"223","severity":1,"message":"275","line":4,"column":9,"nodeType":"225","messageId":"226","endLine":4,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":81,"column":55,"nodeType":"230","messageId":"231","endLine":81,"endColumn":57},{"ruleId":"228","severity":1,"message":"229","line":88,"column":55,"nodeType":"230","messageId":"231","endLine":88,"endColumn":57},"no-unused-vars","'AddBankBooksPath' is defined but never used.","Identifier","unusedVar","'CancelResizdentPath' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'LoginPath' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'Form' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'resp' is assigned a value but never used.","'useState' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'GetHouseHoldBooksPath' is defined but never used.","'FarmAnimals' is defined but never used.","'AddFarmAnimals' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed",["278"],["279"],["278"],["279"],"'AddHouseHoldBookError' is defined but never used.","'withRouter' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Redirect' is defined but never used.","'options' is assigned a value but never used.","'HouseholdBook' is defined but never used.","'AddLandPath' is defined but never used.","'GetLandsPath' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]